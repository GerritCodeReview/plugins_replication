{
  "comments": [
    {
      "key": {
        "uuid": "dc09c5fa_b30bd01d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorage.java",
        "patchSetId": 5
      },
      "lineNbr": 302,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-06-04T09:31:05Z",
      "side": 1,
      "message": "Is this really the case also if there isn\u0027t a multi-master node distribution?\nI would keep this as an error for single-master and lower the severity for a multi-master setup.\n\nAlso, this is swallowing the exception, which isn\u0027t nice as we won\u0027t why the delete failed.",
      "range": {
        "startLine": 302,
        "startChar": 50,
        "endLine": 302,
        "endChar": 82
      },
      "revId": "29dbe0815dc579fbed238d8cc183e57ed332f975",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f9f84c2_b9ec2281",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorage.java",
        "patchSetId": 5
      },
      "lineNbr": 302,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2020-06-04T14:42:27Z",
      "side": 1,
      "message": "\u003e Is this really the case also if there isn\u0027t a multi-master node distribution?\n\nYes, it can happen in MM startup without distribution.\n\n\u003e I would keep this as an error for single-master and lower the severity for a multi-master setup.\n\nThere is no way to do that since we don\u0027t know if someone is running MM or not. \n\n\u003e Also, this is swallowing the exception, which isn\u0027t nice as we won\u0027t why the delete failed.\n\nThis is part of the contract, external entities are allowed to delete it, i.e. deletion is not an error so there should not be an exception. Think of it like git, other processes are allowed to change refs. This contracts allows any replication system, not just other masters it could be a bunch of scripts or a human even, to interact with this filesystem and help replicate.",
      "parentUuid": "dc09c5fa_b30bd01d",
      "range": {
        "startLine": 302,
        "startChar": 50,
        "endLine": 302,
        "endChar": 82
      },
      "revId": "29dbe0815dc579fbed238d8cc183e57ed332f975",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffd3ecac_d37685e8",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorage.java",
        "patchSetId": 5
      },
      "lineNbr": 302,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2020-06-04T18:10:44Z",
      "side": 1,
      "message": "This isn\u0027t swallowing the exception, it is putting an entry in the log. Perhaps by \"swallowing the exception, you meant \"not logging the exception itself in the logs\"? We could add the exception to the logs, but I don\u0027t see the value in this case as we know what triggered the exception: the file/directory is not there. We know this because we are not catching a generic IOException, we are catching the very specific NoSuchFileException, and we are putting a nice entry in the logs. I believe an exception with a stacktrace would litter the logs to the point that is not valuable, we may not want to log anything here, the only reason I added any log entry is simply to debug program flow. Should we change this to a debug (and/or possibly add the filename to the log)? Picture this being similar to looking up a loose object before checking the pack files for it. We would not want to log the exception in the lookup when it is normal for the lookup to fail. \n\nIf I rewrote the code to check for the existence of the file, and only delete it when it exists, you would not expect the existence lookup to log an error when it does not exist. In general is is better to not check for something and then act on it when you can instead act on it first and then react to the implied check (which happens to be via an exception here), because it is less racy. So don\u0027t think of the exception path here as exceptional, it is normal (just like it is normal to not always have a loose object for an existing object).",
      "parentUuid": "7f9f84c2_b9ec2281",
      "range": {
        "startLine": 302,
        "startChar": 50,
        "endLine": 302,
        "endChar": 82
      },
      "revId": "29dbe0815dc579fbed238d8cc183e57ed332f975",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9a2d8ec_e97176c0",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorage.java",
        "patchSetId": 5
      },
      "lineNbr": 312,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-06-04T09:31:05Z",
      "side": 1,
      "message": "Same as above.",
      "range": {
        "startLine": 312,
        "startChar": 51,
        "endLine": 312,
        "endChar": 83
      },
      "revId": "29dbe0815dc579fbed238d8cc183e57ed332f975",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c73e3329_72877bcd",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorage.java",
        "patchSetId": 5
      },
      "lineNbr": 384,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-06-04T09:31:05Z",
      "side": 1,
      "message": "Same comments as above",
      "range": {
        "startLine": 382,
        "startChar": 0,
        "endLine": 384,
        "endChar": 21
      },
      "revId": "29dbe0815dc579fbed238d8cc183e57ed332f975",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "792b9e17_69a09ea4",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorage.java",
        "patchSetId": 5
      },
      "lineNbr": 395,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-06-04T09:31:05Z",
      "side": 1,
      "message": "Same comments as above.",
      "range": {
        "startLine": 393,
        "startChar": 0,
        "endLine": 395,
        "endChar": 21
      },
      "revId": "29dbe0815dc579fbed238d8cc183e57ed332f975",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bfbf5507_0c840bdf",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorage.java",
        "patchSetId": 5
      },
      "lineNbr": 405,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-06-04T09:31:05Z",
      "side": 1,
      "message": "Same comments as above.",
      "range": {
        "startLine": 403,
        "startChar": 0,
        "endLine": 405,
        "endChar": 21
      },
      "revId": "29dbe0815dc579fbed238d8cc183e57ed332f975",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}