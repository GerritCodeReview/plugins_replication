{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "daa608e0_b89801e6",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/FanoutConfigResource.java",
        "patchSetId": 5
      },
      "lineNbr": 74,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2024-02-21T17:36:53Z",
      "side": 1,
      "message": "I think we could do the `load()`ing unconditionally here, without checking whether the remote file exists. From the jgit docs [1].\n\n```\nIf the file does not exist, this configuration is cleared, and thus\nbehaves the same as though the file exists, but is empty.\n```\n\n[1] https://eclipse.gerrithub.io/plugins/gitiles/eclipse-jgit/jgit/+/refs/heads/stable-6.7/org.eclipse.jgit/src/org/eclipse/jgit/storage/file/FileBasedConfig.java#124",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 74,
        "endChar": 30
      },
      "revId": "34af6a132eacc07018a29eb53da34d88d88a6b6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fcd2078e_d13a5abc",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/FanoutConfigResource.java",
        "patchSetId": 5
      },
      "lineNbr": 74,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-02-22T10:49:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "daa608e0_b89801e6",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 74,
        "endChar": 30
      },
      "revId": "34af6a132eacc07018a29eb53da34d88d88a6b6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f890739d_6b1140c7",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/FanoutConfigResource.java",
        "patchSetId": 5
      },
      "lineNbr": 81,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2024-02-21T17:36:53Z",
      "side": 1,
      "message": "if the current `$remote.config` contained a `[remote \"foo\"]` configuration and `updates` no longer had that, wouldn\u0027t that remote just be left stale in the `$remote.config`?\n\nSame question for the `FileConfigResource.update`.\n\nApologies if this is dealt with somewhere, but I couldn\u0027t find any logic for this, nor any test addressing deletions.",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 81,
        "endChar": 63
      },
      "revId": "34af6a132eacc07018a29eb53da34d88d88a6b6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8db1b05_7ef7563d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/FanoutConfigResource.java",
        "patchSetId": 5
      },
      "lineNbr": 81,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-02-22T10:49:18Z",
      "side": 1,
      "message": "\u003e if the current $remote.config contained a [remote \"foo\"] configuration and updates no longer had that, wouldn\u0027t that remote just be left stale in the $remote.config?\n\nYes, the `[remote \"foo\"]` will stay unchanged. In the current implementation, there\u0027s no way to fully remove the remote configuration. Probably the only way to \"remove\" a remote configuration is to reset all of its options to `null` or empty string.\n\nProbably we\u0027d need a separate `remove(String subSectionName)` method to facilitate the remote removal. But that should go on the `ReplicationRemoteUpdate` class.\n\n\u003e Same question for the `FileConfigResource.update`.\n\nThe same applies to the `FileConfigResource.update`, it won\u0027t \"remove\" sections it will just \"update\" them, where _update_ means modify or add.",
      "parentUuid": "f890739d_6b1140c7",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 81,
        "endChar": 63
      },
      "revId": "34af6a132eacc07018a29eb53da34d88d88a6b6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd7c6453_317ae721",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/FanoutConfigResource.java",
        "patchSetId": 5
      },
      "lineNbr": 81,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2024-02-22T12:25:37Z",
      "side": 1,
      "message": "Thanks for explaining, makes sense if we don\u0027t have a use-case at the moment.",
      "parentUuid": "c8db1b05_7ef7563d",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 81,
        "endChar": 63
      },
      "revId": "34af6a132eacc07018a29eb53da34d88d88a6b6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c96ca455_ce5a28e6",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/FanoutConfigResource.java",
        "patchSetId": 5
      },
      "lineNbr": 84,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2024-02-21T17:36:53Z",
      "side": 1,
      "message": "nit: I think I understand why we are always using `setStringList` and `setStringList` here, as opposed to `setInt`, `setBool`, etc, because it allows us to cope with all types in any cardinality. \n\nHowever I think it might be misleading (it was for me ðŸ˜Š), because it looks like we are always getting and setting list of values here, which is not the case.\n\nPerhaps a quick comment explaining this gotcha would help, feel free to ignore though.",
      "range": {
        "startLine": 84,
        "startChar": 8,
        "endLine": 84,
        "endChar": 69
      },
      "revId": "34af6a132eacc07018a29eb53da34d88d88a6b6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a89c6a9_030c86f7",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/FanoutConfigResource.java",
        "patchSetId": 5
      },
      "lineNbr": 84,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-02-22T10:49:18Z",
      "side": 1,
      "message": "It\u0027s not only different cardinality but also different types ;) At the end everything is a `String` (as it\u0027s read and written to a file), the `setInt`/`getInt` specialized methods are just helpers.\n\nThe same pattern is already used in a few places in Gerrit, don\u0027t think that here we need to explain it with a comment ;)",
      "parentUuid": "c96ca455_ce5a28e6",
      "range": {
        "startLine": 84,
        "startChar": 8,
        "endLine": 84,
        "endChar": 69
      },
      "revId": "34af6a132eacc07018a29eb53da34d88d88a6b6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28aea6c3_355bb1c8",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/FanoutConfigResource.java",
        "patchSetId": 5
      },
      "lineNbr": 84,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2024-02-22T12:25:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5a89c6a9_030c86f7",
      "range": {
        "startLine": 84,
        "startChar": 8,
        "endLine": 84,
        "endChar": 69
      },
      "revId": "34af6a132eacc07018a29eb53da34d88d88a6b6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd1bcd00_117cf1ca",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/FanoutConfigResource.java",
        "patchSetId": 5
      },
      "lineNbr": 89,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2024-02-21T17:36:53Z",
      "side": 1,
      "message": "In a real case scenario, is it possible that `updates` contain anything other than `remote`?",
      "range": {
        "startLine": 89,
        "startChar": 0,
        "endLine": 89,
        "endChar": 27
      },
      "revId": "34af6a132eacc07018a29eb53da34d88d88a6b6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f24de7b7_c99e066f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/FanoutConfigResource.java",
        "patchSetId": 5
      },
      "lineNbr": 89,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-02-22T10:49:18Z",
      "side": 1,
      "message": "_Right now_, no it\u0027s not possible that we\u0027ll have anything else in the updates, as the `update()` method is only called from `ReplicationRemotesUpdater.update()` that also ensures that only remote sections are passed to `ConfigResource.update()`.\n\nBut, as we are on the lowest level that doesn\u0027t know from where it\u0027s called and with what data in the `Config` object, we should approach the input as it potentially can have everything.\n\nIf we don\u0027t remove the remotes here, we\u0027ll end up with duplicated remote sections, one being stored in the \"fanout\" style, and the other in the \"replication.config\", as we call `suer.update(updates)` in the next line.",
      "parentUuid": "bd1bcd00_117cf1ca",
      "range": {
        "startLine": 89,
        "startChar": 0,
        "endLine": 89,
        "endChar": 27
      },
      "revId": "34af6a132eacc07018a29eb53da34d88d88a6b6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfad473e_2b8f8cf4",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/FanoutConfigResource.java",
        "patchSetId": 5
      },
      "lineNbr": 89,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2024-02-22T12:25:37Z",
      "side": 1,
      "message": "\u003e _Right now_, no it\u0027s not possible that we\u0027ll have anything else in the updates, as the `update()` method is only called from `ReplicationRemotesUpdater.update()` that also ensures that only remote sections are passed to `ConfigResource.update()`.\n\u003e \n\u003e But, as we are on the lowest level that doesn\u0027t know from where it\u0027s called and with what data in the `Config` object, we should approach the input as it potentially can have everything.\n\u003e \n\u003e If we don\u0027t remove the remotes here, we\u0027ll end up with duplicated remote sections, one being stored in the \"fanout\" style, and the other in the \"replication.config\", as we call `suer.update(updates)` in the next line.\n\nI am trying to understand why we need to call the `super.update()` at all?\n\nAs you say, this configuration should only contain remotes and the `RemoteUpdater.update()` docs state that:\n\n `\u003cp\u003eProvided JGit {@link Config} object should contain at least one named \n  \u003cem\u003eremote\u003c/em\u003e section. All other configurations will be ignored.`\n\nFrom this implementation, it doesn\u0027t look like other configurations will be ignored, but rather updated using the `FileConfigResource.update()`.",
      "parentUuid": "f24de7b7_c99e066f",
      "range": {
        "startLine": 89,
        "startChar": 0,
        "endLine": 89,
        "endChar": 27
      },
      "revId": "34af6a132eacc07018a29eb53da34d88d88a6b6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34c5d3c6_405646df",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/FanoutConfigResource.java",
        "patchSetId": 5
      },
      "lineNbr": 89,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-02-22T12:44:23Z",
      "side": 1,
      "message": "\u003e I am trying to understand why we need to call the super.update() at all?\n\nWe need that for consistency with the \"read\" operation, let me explain. When a new `FanoutConfigResource` is created, the `replication.conf` and configs in `replication/` are read and combined into one `Config` object. To have the consistent \"write\" (aka. `update()`), we must also update \"all replication configuration files\", meaning we need to split \"remotes\" into files in `replication/` and everything else should go to `replication.config`.\n\nThe method is called `update` not `updateRemotes`, and it\u0027s on the \"resource\" class, so it should not differentiate on what sections should be persisted.\n\nAlso, it\u0027s an \"implementation\" detail that the \"fanout\" config version splits configuration into multiple files. From the caller\u0027s perspective, they just expect a complete `Config` object with the configuration. Similarly, when the caller is updating the configuration the behaviour should be the same as in `FileConfigResource`, and all configuration options must be persisted. The fact that some are stored in separate files in `replication/` and others in the `replication.config` is again an implementation detail of the `FanoutConfigResource`.\n\nHope that this makes more sense now.",
      "parentUuid": "dfad473e_2b8f8cf4",
      "range": {
        "startLine": 89,
        "startChar": 0,
        "endLine": 89,
        "endChar": 27
      },
      "revId": "34af6a132eacc07018a29eb53da34d88d88a6b6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47d46f9f_af6b636b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/FanoutConfigResource.java",
        "patchSetId": 5
      },
      "lineNbr": 89,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2024-02-22T14:09:31Z",
      "side": 1,
      "message": "Yes it does make sense, thanks @dariusz.luksza@gmail.com.\nThe `ReplicationRemotesUpdater.update()` _does_ the filtering and it does ignore anything that it is not a remote.\n\nThe `FanoutConfigResource.update()` and `FileConfigResource.update()` methods however (even though, as today are _only_ called by the `ReplicationRemotesUpdater.update()`) should take care of updating the entire configuration resource, not just remotes.\n\nArguably, as we discussed f2f they could be made package-protected, but I think it does make sense to have them publicly available so that they can be used independently too.\n\nResolving this.",
      "parentUuid": "34c5d3c6_405646df",
      "range": {
        "startLine": 89,
        "startChar": 0,
        "endLine": 89,
        "endChar": 27
      },
      "revId": "34af6a132eacc07018a29eb53da34d88d88a6b6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4fe3843_bf5d4700",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationRemotesUpdater.java",
        "patchSetId": 5
      },
      "lineNbr": 50,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2024-02-21T17:36:53Z",
      "side": 1,
      "message": "updates",
      "range": {
        "startLine": 50,
        "startChar": 13,
        "endLine": 50,
        "endChar": 19
      },
      "revId": "34af6a132eacc07018a29eb53da34d88d88a6b6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a9a3efe_c5ec1d88",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationRemotesUpdater.java",
        "patchSetId": 5
      },
      "lineNbr": 50,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-02-22T10:49:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c4fe3843_bf5d4700",
      "range": {
        "startLine": 50,
        "startChar": 13,
        "endLine": 50,
        "endChar": 19
      },
      "revId": "34af6a132eacc07018a29eb53da34d88d88a6b6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b8e7a77_bd795bd7",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationRemotesUpdater.java",
        "patchSetId": 5
      },
      "lineNbr": 76,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2024-02-21T17:36:53Z",
      "side": 1,
      "message": "nit: the same config object is sometimes named `configUpdates`, and sometimes `remoteConfig`. Yet other names (i.e. `updates`) is used in {File|Fanout}ConfigResource.\n\nConsider sticking to one for consistency.\n\nI lean towards `remoteConfig`, as opposed to `configUpdates` to make it obvious that it is not just a delta. imho, `updatedConfig` would also do.",
      "range": {
        "startLine": 76,
        "startChar": 74,
        "endLine": 76,
        "endChar": 94
      },
      "revId": "34af6a132eacc07018a29eb53da34d88d88a6b6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6cc77879_84d2d237",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationRemotesUpdater.java",
        "patchSetId": 5
      },
      "lineNbr": 76,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-02-22T10:49:18Z",
      "side": 1,
      "message": "IMO, it\u0027s nuanced in conditional. In the `update(Config remoteConfig)` L60, it serves a purpose of documenting the intent, that the `Config` object should only have remote sections. Here we do the _validation_ part for the input, so we don\u0027t know what\u0027s actually inside of the `Config` that\u0027s why it has more generic name.\n\nIf we want to keep the consistency, I\u0027d rather go with more generic names like `updates`, `config` or `input`. WDYT? Does the above makes any sense?",
      "parentUuid": "3b8e7a77_bd795bd7",
      "range": {
        "startLine": 76,
        "startChar": 74,
        "endLine": 76,
        "endChar": 94
      },
      "revId": "34af6a132eacc07018a29eb53da34d88d88a6b6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09829282_47f5ad17",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationRemotesUpdater.java",
        "patchSetId": 5
      },
      "lineNbr": 76,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2024-02-22T12:25:37Z",
      "side": 1,
      "message": "yep it makes sense, it was just a nit anyway, thanks for explaining.",
      "parentUuid": "6cc77879_84d2d237",
      "range": {
        "startLine": 76,
        "startChar": 74,
        "endLine": 76,
        "endChar": 94
      },
      "revId": "34af6a132eacc07018a29eb53da34d88d88a6b6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71e9636c_82fb8484",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationRemotesUpdater.java",
        "patchSetId": 5
      },
      "lineNbr": 92,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2024-02-21T17:36:53Z",
      "side": 1,
      "message": "nit: Given this method only sets passwords to the `secureStore`, it does not need access to all the `remotes`.\n\nConsider passing only `configs.passwords` rather than the entire `SeparatedRemoveConfigs` object.",
      "range": {
        "startLine": 92,
        "startChar": 2,
        "endLine": 92,
        "endChar": 72
      },
      "revId": "34af6a132eacc07018a29eb53da34d88d88a6b6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05d20e6e_78cec8b2",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationRemotesUpdater.java",
        "patchSetId": 5
      },
      "lineNbr": 92,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-02-22T10:49:18Z",
      "side": 1,
      "message": "Actually that was how I initially implemented it as:\n```\nprivate void persistRemotePasswords(Cofnfig config)\n```\n\nBut then it\u0027s possible to call this method with any config so:\n```\npersistRemotesPasswords(configs.remotes)\npersistRemotesPasswords(configs.passwords)\npersistRemtoesPasswords(updates)\n```\nwhich is error-prone, and as we\u0027re dealing here with potentially sensitive information IMO it\u0027s better to use `SeparetedRemoteConfigs` as argument. Sure it\u0027s a private method, but it\u0027s better be safe then sorry ;), hope this makes sense.",
      "parentUuid": "71e9636c_82fb8484",
      "range": {
        "startLine": 92,
        "startChar": 2,
        "endLine": 92,
        "endChar": 72
      },
      "revId": "34af6a132eacc07018a29eb53da34d88d88a6b6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04f406ea_d7057133",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationRemotesUpdater.java",
        "patchSetId": 5
      },
      "lineNbr": 104,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2024-02-21T17:36:53Z",
      "side": 1,
      "message": "Did you mean `SeparatedRemoteConfigs`, as opposed to `Removed`?\n\nI wonder if we need this container at all, can we just not use instantiate `passwords` and `remotes` config separately?",
      "range": {
        "startLine": 104,
        "startChar": 23,
        "endLine": 104,
        "endChar": 45
      },
      "revId": "34af6a132eacc07018a29eb53da34d88d88a6b6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d33a6a6f_4045e724",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationRemotesUpdater.java",
        "patchSetId": 5
      },
      "lineNbr": 104,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-02-22T10:49:18Z",
      "side": 1,
      "message": "\u003e Did you mean SeparatedRemoteConfigs, as opposed to Removed?\n\nyes, that\u0027s typo ðŸ˜•, good catch!\n\n\u003e I wonder if we need this container at all, can we just not use instantiate passwords and remotes config separately?\n\nThis is used as a return type for `onlyRemoteSectionsWithSeparatedPasswords`, so we need to bundle those two together (or need to iterate twice over the `updates`), we can potentially use some kind of a tuple, eg. a two-element array, but that adds ambiguity and doesn\u0027t feel right. That\u0027s why I went with the _object oriented paradigm_ ;)",
      "parentUuid": "04f406ea_d7057133",
      "range": {
        "startLine": 104,
        "startChar": 23,
        "endLine": 104,
        "endChar": 45
      },
      "revId": "34af6a132eacc07018a29eb53da34d88d88a6b6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae900240_5a084f63",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/FanoutConfigResourceTest.java",
        "patchSetId": 5
      },
      "lineNbr": 297,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2024-02-21T17:36:53Z",
      "side": 1,
      "message": "Did you actually mean to save this in the `gerrit.config`?\n\nShouldn\u0027t this be `newReplicationConfig()` [1]?\n\n[1] https://gerrit.googlesource.com/plugins/replication/+/refs/heads/master/src/test/java/com/googlesource/gerrit/plugins/replication/AbstractConfigTest.java#100",
      "range": {
        "startLine": 297,
        "startChar": 49,
        "endLine": 297,
        "endChar": 72
      },
      "revId": "34af6a132eacc07018a29eb53da34d88d88a6b6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e48bcd17_64a96043",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/FanoutConfigResourceTest.java",
        "patchSetId": 5
      },
      "lineNbr": 297,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-02-22T10:49:18Z",
      "side": 1,
      "message": "Good catch!\n\nDone",
      "parentUuid": "ae900240_5a084f63",
      "range": {
        "startLine": 297,
        "startChar": 49,
        "endLine": 297,
        "endChar": 72
      },
      "revId": "34af6a132eacc07018a29eb53da34d88d88a6b6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}