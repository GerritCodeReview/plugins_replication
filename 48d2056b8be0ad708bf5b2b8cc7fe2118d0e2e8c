{
  "comments": [
    {
      "key": {
        "uuid": "f9779001_f69514d6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2020-05-15T14:46:29Z",
      "side": 1,
      "message": "Could you also elaborate more on why, after the removal of synchronized, the code is still thread-safe?",
      "revId": "48d2056b8be0ad708bf5b2b8cc7fe2118d0e2e8c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f61b7a3_6c126bf1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-05-15T14:50:04Z",
      "side": 1,
      "message": "And maybe to help with that, why the synchronized was added initially?",
      "parentUuid": "f9779001_f69514d6",
      "revId": "48d2056b8be0ad708bf5b2b8cc7fe2118d0e2e8c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e30fd13_228f6064",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-05-15T14:58:04Z",
      "side": 1,
      "message": "\u003e And maybe to help with that, why the synchronized was added initially?\n\nThat is a question for Saša then, not Marcin :-)\nIt wasn\u0027t initially there, but during the review with Saša we added the synchronized.\n\nI am not sure Marcin knows why it was there. What is sure, is that the synchronized in *that* point is a single point of failure for the whole Gerrit JVM because it blocks *ANY* update operation on *ANYTHING* in Gerrit UI, repos, anything.",
      "parentUuid": "5f61b7a3_6c126bf1",
      "revId": "48d2056b8be0ad708bf5b2b8cc7fe2118d0e2e8c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3318b2b9_49593e36",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-05-15T21:11:19Z",
      "side": 1,
      "message": "I believe PS3 is exhaustive enough to cover this concern.",
      "parentUuid": "4e30fd13_228f6064",
      "revId": "48d2056b8be0ad708bf5b2b8cc7fe2118d0e2e8c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31c658e5_a34af220",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2020-05-15T14:46:29Z",
      "side": 1,
      "message": "Overall I am not 100% sure that this code is correct, but I am also not sure I can prove that it is incorrect. Since this.destinations is an ImmutableList the only way of updating it is to replace\nit with a new list. Since it is volatile, the update of this.destinations is atomic and thread safe.\nNevertheless, I have some questions in my inline comments.",
      "revId": "48d2056b8be0ad708bf5b2b8cc7fe2118d0e2e8c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7daff139_451d045f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/DestinationsCollection.java",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2020-05-15T14:46:29Z",
      "side": 1,
      "message": "Not directly related to this change, but if this field is the only remaining reason for\nsynchronization in this class then why not also make it volatile and simplify the code?",
      "revId": "48d2056b8be0ad708bf5b2b8cc7fe2118d0e2e8c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ae4ff98_e30bb265",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/DestinationsCollection.java",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-05-15T14:58:04Z",
      "side": 1,
      "message": "Good idea, follow-up change?",
      "parentUuid": "7daff139_451d045f",
      "revId": "48d2056b8be0ad708bf5b2b8cc7fe2118d0e2e8c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a033c10_553424ed",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/DestinationsCollection.java",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-05-15T18:32:19Z",
      "side": 1,
      "message": "+1 but it should be is separate change",
      "parentUuid": "4ae4ff98_e30bb265",
      "revId": "48d2056b8be0ad708bf5b2b8cc7fe2118d0e2e8c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8538c9e9_1bc0d310",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/DestinationsCollection.java",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-05-15T21:11:19Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7a033c10_553424ed",
      "revId": "48d2056b8be0ad708bf5b2b8cc7fe2118d0e2e8c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65ccac2f_ffb05664",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/DestinationsCollection.java",
        "patchSetId": 2
      },
      "lineNbr": 235,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2020-05-15T14:46:29Z",
      "side": 1,
      "message": "If access to the this.destinations doesn\u0027t need to be synchronized then this method also\nshouldn\u0027t synchronize access to this.destinations. In this case, just like in the shutdown()\nmethod, reduce the scope of synchronization to just accessing the shuttingDown?",
      "revId": "48d2056b8be0ad708bf5b2b8cc7fe2118d0e2e8c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "972709d6_1b48e589",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/DestinationsCollection.java",
        "patchSetId": 2
      },
      "lineNbr": 235,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-05-15T14:58:04Z",
      "side": 1,
      "message": "Do we want to execute two reloads concurrently? I don\u0027t believe so :-(",
      "parentUuid": "65ccac2f_ffb05664",
      "revId": "48d2056b8be0ad708bf5b2b8cc7fe2118d0e2e8c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dad1428f_c859ceeb",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/DestinationsCollection.java",
        "patchSetId": 2
      },
      "lineNbr": 235,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-05-15T18:32:19Z",
      "side": 1,
      "message": "Luca is correct we want to make sure that we do not have more than one reload at the same time",
      "parentUuid": "972709d6_1b48e589",
      "revId": "48d2056b8be0ad708bf5b2b8cc7fe2118d0e2e8c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2a1cdf1_df355b4e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/DestinationsCollection.java",
        "patchSetId": 2
      },
      "lineNbr": 235,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-05-15T21:11:19Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "dad1428f_c859ceeb",
      "revId": "48d2056b8be0ad708bf5b2b8cc7fe2118d0e2e8c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}