{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e3fb9d90_bb6f7193",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-01-12T21:54:58Z",
      "side": 1,
      "message": "I believe this is obsolete, @syntonyze@gmail.com can you abandon it?",
      "revId": "ba3b6cce01571668d64fffeafe0a27854cafd5ca",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7fd4e5a9_19c7e1f1",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/PushOne.java",
        "patchSetId": 1
      },
      "lineNbr": 392,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-01-27T09:49:54Z",
      "side": 1,
      "message": "If we just look for \u0027not found\u0027 at L390, it would still do the job and potentially catching more future variations.",
      "range": {
        "startLine": 392,
        "startChar": 26,
        "endLine": 392,
        "endChar": 62
      },
      "revId": "ba3b6cce01571668d64fffeafe0a27854cafd5ca",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24207430_1b7325f2",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/PushOne.java",
        "patchSetId": 1
      },
      "lineNbr": 392,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-01-27T09:52:10Z",
      "side": 1,
      "message": "I was thinking \u0027not found\u0027 being too generic, as literally _anything_ could be not found, if there is no discriminating subject, such as \"repository\" or \"git repository\".\n\nI think the same applies to the generic \u0027unavailable\u0027 for example.\n\nWDYT?",
      "parentUuid": "7fd4e5a9_19c7e1f1",
      "range": {
        "startLine": 392,
        "startChar": 26,
        "endLine": 392,
        "endChar": 62
      },
      "revId": "ba3b6cce01571668d64fffeafe0a27854cafd5ca",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae8c3b8e_baa71194",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/PushOne.java",
        "patchSetId": 1
      },
      "lineNbr": 392,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2022-01-27T17:39:48Z",
      "side": 1,
      "message": "\u003e I was thinking \u0027not found\u0027 being too generic, as literally _anything_ could be not found, if there is no discriminating subject, such as \"repository\" or \"git repository\".\n\nI believe the consequence of over matching is worse than the consequence of under matching? Therefore I would match as precisely as possible for the known existing use cases.\n\nTo help future maintainers, could you add a comment next to the new format explaining which server (and version if possible) creates it, that makes it easier to maintain in the future.",
      "parentUuid": "24207430_1b7325f2",
      "range": {
        "startLine": 392,
        "startChar": 26,
        "endLine": 392,
        "endChar": 62
      },
      "revId": "ba3b6cce01571668d64fffeafe0a27854cafd5ca",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edd5df48_fefb830f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/PushOne.java",
        "patchSetId": 1
      },
      "lineNbr": 392,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-01-27T17:47:59Z",
      "side": 1,
      "message": "\u003e \u003e I was thinking \u0027not found\u0027 being too generic, as literally _anything_ could be not found, if there is no discriminating subject, such as \"repository\" or \"git repository\".\n\u003e \n\u003e I believe the consequence of over matching is worse than the consequence of under matching? Therefore I would match as precisely as possible for the known existing use cases.\n\n+1\nThe case I have added is the most precise for this particular case.\n\n\u003e \n\u003e To help future maintainers, could you add a comment next to the new format explaining which server (and version if possible) creates it, that makes it easier to maintain in the future.\n\nYep, let me get some details.\n\nAlthough my hope is that we will not maintain this in the future, but rather change the approach altogether.\n\nDo you have any opinion on the approach (note, not on the implementation, which is still a skinny draft), I proposed here [1] for master?\n\n\n[1]https://gerrit-review.googlesource.com/c/plugins/replication/+/329028",
      "parentUuid": "ae8c3b8e_baa71194",
      "range": {
        "startLine": 392,
        "startChar": 26,
        "endLine": 392,
        "endChar": 62
      },
      "revId": "ba3b6cce01571668d64fffeafe0a27854cafd5ca",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8e4e30d_940dbabf",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/PushOne.java",
        "patchSetId": 1
      },
      "lineNbr": 392,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2022-01-27T18:03:29Z",
      "side": 1,
      "message": "\u003e Although my hope is that we will not maintain this in the future, but rather change the approach altogether.\n\u003e \n\u003e Do you have any opinion on the approach (note, not on the implementation, which is still a skinny draft), I proposed here [1] for master?\n\nI think its a nice approach, but maybe I don\u0027t understand how that would work as a general solution? It appears specific to situations where Gerrit is the endpoint only though (and a modern enough one)?",
      "parentUuid": "edd5df48_fefb830f",
      "range": {
        "startLine": 392,
        "startChar": 26,
        "endLine": 392,
        "endChar": 62
      },
      "revId": "ba3b6cce01571668d64fffeafe0a27854cafd5ca",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ee1267a_f6e32c53",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/PushOne.java",
        "patchSetId": 1
      },
      "lineNbr": 392,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-01-27T18:40:19Z",
      "side": 1,
      "message": "\u003e \u003e Although my hope is that we will not maintain this in the future, but rather change the approach altogether.\n\u003e \u003e \n\u003e \u003e Do you have any opinion on the approach (note, not on the implementation, which is still a skinny draft), I proposed here [1] for master?\n\u003e \n\u003e I think its a nice approach, but maybe I don\u0027t understand how that would work as a general solution? It appears specific to situations where Gerrit is the endpoint only though (and a modern enough one)?\n\nThe idea is to provide the implementation for the 4 available incarnations of AdminApi (RemoteSsh, GerritSshApi, GerritRestApi, LocalFS), so that the endpoint could be any of the supported ones, not just Gerrit.",
      "parentUuid": "b8e4e30d_940dbabf",
      "range": {
        "startLine": 392,
        "startChar": 26,
        "endLine": 392,
        "endChar": 62
      },
      "revId": "ba3b6cce01571668d64fffeafe0a27854cafd5ca",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6c90659_37be80e5",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/PushOneTest.java",
        "patchSetId": 1
      },
      "lineNbr": 182,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2022-01-27T17:39:48Z",
      "side": 1,
      "message": "Better to name this after the server?",
      "range": {
        "startLine": 182,
        "startChar": 14,
        "endLine": 182,
        "endChar": 61
      },
      "revId": "ba3b6cce01571668d64fffeafe0a27854cafd5ca",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ba3b6cce01571668d64fffeafe0a27854cafd5ca",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ba3b6cce01571668d64fffeafe0a27854cafd5ca",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["hashtag:allow-unresolved-comments"]}
      },
      "patchSetCommitId": "ba3b6cce01571668d64fffeafe0a27854cafd5ca",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ba3b6cce01571668d64fffeafe0a27854cafd5ca",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ba3b6cce01571668d64fffeafe0a27854cafd5ca",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}