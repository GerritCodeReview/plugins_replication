{
  "comments": [
    {
      "key": {
        "uuid": "e1ff3efd_22d224b7",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/Destination.java",
        "patchSetId": 3
      },
      "lineNbr": 617,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-10-15T12:54:25Z",
      "side": 1,
      "message": "While this works it looks more like a workaround than a proper solution.\nThe call stack is:\n\n  firePendingEvents \u003e onGitReferenceUpdated \u003e wouldPushRef\n\nHowever, pushing all refs is actually never triggered as a result of processing a ref-updated\nevent. Therefore, it also shouldn\u0027t be replayed using this mechanism. Having said that,\nI believe that this is an issue introduced in [1] and not in this change.\n\nIMHO, replaying of the push-all tasks shouldn\u0027t (ab)use the onGitReferenceUpdated code path.\n\n[1] https://gerrit-review.googlesource.com/c/plugins/replication/+/235592",
      "revId": "3ddf835c203565dbd415f468e0d40eac1b815c63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70db3545_a4652aa6",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/Destination.java",
        "patchSetId": 3
      },
      "lineNbr": 617,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2019-10-15T13:18:50Z",
      "side": 1,
      "message": "While I agree with you, that\u0027s an existing naming problem, and I don\u0027t think this fix is related. The naming is improved in the next change where it is related.",
      "parentUuid": "e1ff3efd_22d224b7",
      "revId": "3ddf835c203565dbd415f468e0d40eac1b815c63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a083fb5_0553ad19",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/Destination.java",
        "patchSetId": 3
      },
      "lineNbr": 617,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-10-15T13:25:29Z",
      "side": 1,
      "message": "What I don\u0027t like is not related to naming but on using the onGitReferenceUpdated\nmethod to replay something that wasn\u0027t triggered by a ref-updated event.\nIMHO a proper fix would be to replay the \u0027..all..\u0027 events using a different code path.",
      "parentUuid": "70db3545_a4652aa6",
      "revId": "3ddf835c203565dbd415f468e0d40eac1b815c63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a714e04_339d7c72",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/Destination.java",
        "patchSetId": 3
      },
      "lineNbr": 617,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2019-10-15T13:50:57Z",
      "side": 1,
      "message": "I don\u0027t understand your comment, and is it related to this fix? This fix has nothing to do with the outside callers, this method is broken and this change fixes it right?",
      "parentUuid": "3a083fb5_0553ad19",
      "revId": "3ddf835c203565dbd415f468e0d40eac1b815c63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83ab56e3_b466a719",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/Destination.java",
        "patchSetId": 3
      },
      "lineNbr": 617,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-10-15T14:06:17Z",
      "side": 1,
      "message": "It is not strictly related to this fix. My comment is more related to the topic this change\nis trying to address: replaying of the pending \"..all..\" tasks.\n\nAnyway, the \"..all..\" is not really a ref. It is used to describe a special case of the\nPushOne implementation which pushes all refs. Why would we even call wouldPushRef(ALL_REFS)\nwhen it the result is always true?",
      "parentUuid": "3a714e04_339d7c72",
      "revId": "3ddf835c203565dbd415f468e0d40eac1b815c63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "982e3d01_e91f6d33",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/Destination.java",
        "patchSetId": 3
      },
      "lineNbr": 617,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2019-10-15T15:04:40Z",
      "side": 1,
      "message": "The result is not always true if the caller has a variable. If the caller has to check the contents of their variable and determine for themselves whether a push should happen, then encapsulation would be bypassed. The destination is supposed to make this decision, not the caller, as per OO design",
      "parentUuid": "83ab56e3_b466a719",
      "revId": "3ddf835c203565dbd415f468e0d40eac1b815c63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c74767b4_61ac725d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/Destination.java",
        "patchSetId": 3
      },
      "lineNbr": 617,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-10-15T15:33:36Z",
      "side": 1,
      "message": "You can look at it this way and even prove that there is nothing wrong with this change based\non the current design.\n\nIt is unrelated to your fix but I still find it wrong that ReplicationQueue.firePendingEvents\nreplays both ref-updated and push-all tasks using the onGitReferenceUpdated call.\nThe decision to schedule a pending push-all task should be made already at that place without\na need to match \"..all..\" against the replication configuration (in order to satisfy the\ncurrent encapsulation).",
      "parentUuid": "982e3d01_e91f6d33",
      "revId": "3ddf835c203565dbd415f468e0d40eac1b815c63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02d3681d_b491919b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/Destination.java",
        "patchSetId": 3
      },
      "lineNbr": 617,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2019-10-15T16:56:15Z",
      "side": 1,
      "message": "\u003e I still find it wrong that ReplicationQueue.firePendingEvents\n\u003e replays both ref-updated and push-all tasks using the onGitReferenceUpdated call.\n\nI agree with this, and I have proposed am independent fix, see https://gerrit-review.googlesource.com/c/plugins/replication/+/240894/4/src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationQueue.java\n\n\u003e The decision to schedule a pending push-all task should be made already at that place without\n\u003e a need to match \"..all..\" against the replication configuration (in order to satisfy the\n\u003e current encapsulation).\n\nThis part I don\u0027t understand, maybe you can upload a change for this proposal?\n\nTo be clear, this change is not about making the decision to schedule the original push-all, that doesn\u0027t call wouldPushRef() yet, which I think is a mistake since it implements policy outside of the encapsulation layer this method is meant to provide. This change is about making the decision whether to run an already persisted task (which happens to be a push-all for a project) on restart.\n\nI hope that we can evolve things incrementally and evaluate each change on its own whether it improves things, and approve changes that improve things even if they don\u0027t solve every known design problem as long as each change doesn\u0027t take a step in the wrong direction. I believe this change fixes a bug in this method, no matter where this method is used. So while the design as to where the decision to push-all is currently made may not be ideal, I believe this fix is correct regardless of that and I hope you can evaluate it within that scope and approve it if you think it is correct within that scope. I also welcome suggestions for ways to improve the design in future changes beyond this.",
      "parentUuid": "c74767b4_61ac725d",
      "revId": "3ddf835c203565dbd415f468e0d40eac1b815c63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62819dc4_1cb8a9a0",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/Destination.java",
        "patchSetId": 3
      },
      "lineNbr": 617,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2019-10-15T18:01:46Z",
      "side": 1,
      "message": "\u003e This part I don\u0027t understand, maybe you can upload a change for this proposal?\n\nPerhaps this is the direction you think things should move towards? https://gerrit-review.googlesource.com/c/plugins/replication/+/241072",
      "parentUuid": "02d3681d_b491919b",
      "revId": "3ddf835c203565dbd415f468e0d40eac1b815c63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37ef05fe_f7562210",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/Destination.java",
        "patchSetId": 3
      },
      "lineNbr": 617,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-10-16T08:42:29Z",
      "side": 1,
      "message": "I was thinking over it again and my conclusion is the following:\n\n1 we can accept this change as-is as it doesn\u0027t make things worse and it fixes one small issue\n\n2 replaying replication tasks should NOT lead to any calls to Destination.wouldPushRef.\nThis (and other) checks were done when the replication tasks were initially created.\nTherefore, when replaying we only need to reschedule the pending tasks without (repeating)\nany checks. This is basically a design issue which needs to be fixed in a follow-up change.\n\n3 And, sure, I agree with all of your general remarks about the code-review process.",
      "parentUuid": "62819dc4_1cb8a9a0",
      "revId": "3ddf835c203565dbd415f468e0d40eac1b815c63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}