{
  "comments": [
    {
      "key": {
        "uuid": "7f830d9f_acad279e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/AutoReloadRunnable.java",
        "patchSetId": 5
      },
      "lineNbr": 77,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-06-12T09:55:49Z",
      "side": 1,
      "message": "Can we have the same coding style for the same thing (iteration over configListeners) in both methods?",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 77,
        "endChar": 1
      },
      "revId": "0788c3c41c014359d8f2c2927a7cbabc75fb7f01",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7239eda2_1d0f7fd2",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/AutoReloadRunnable.java",
        "patchSetId": 5
      },
      "lineNbr": 77,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-06-12T19:03:03Z",
      "side": 1,
      "message": "we can\u0027t use the forEach() with lambdas that can throw exceptions :-(\nI need to align with the traditional for/loop",
      "parentUuid": "7f830d9f_acad279e",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 77,
        "endChar": 1
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "0788c3c41c014359d8f2c2927a7cbabc75fb7f01",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aacfdef5_b86875e2",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/DestinationsCollection.java",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-06-07T16:48:26Z",
      "side": 1,
      "message": "this does not need to be an instance variable, it is only used in allDestinations() method",
      "range": {
        "startLine": 57,
        "startChar": 2,
        "endLine": 57,
        "endChar": 36
      },
      "revId": "0788c3c41c014359d8f2c2927a7cbabc75fb7f01",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d909534_57345d0b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/DestinationsCollection.java",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-06-12T19:07:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aacfdef5_b86875e2",
      "range": {
        "startLine": 57,
        "startChar": 2,
        "endLine": 57,
        "endChar": 36
      },
      "revId": "0788c3c41c014359d8f2c2927a7cbabc75fb7f01",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d02ff46_6ae1ffca",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/DestinationsCollection.java",
        "patchSetId": 5
      },
      "lineNbr": 65,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-06-12T09:55:49Z",
      "side": 1,
      "message": "Why do we need Provider here? Isn\u0027t ReplicationQueue bound as a singleton?",
      "revId": "0788c3c41c014359d8f2c2927a7cbabc75fb7f01",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "353a5db4_9905121a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/DestinationsCollection.java",
        "patchSetId": 5
      },
      "lineNbr": 65,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-06-12T19:07:35Z",
      "side": 1,
      "message": "This Provider\u003c\u003e is purely to workaround on the Guice circular dependencies issue.",
      "parentUuid": "4d02ff46_6ae1ffca",
      "revId": "0788c3c41c014359d8f2c2927a7cbabc75fb7f01",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f15e2256_02673f0d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationModule.java",
        "patchSetId": 5
      },
      "lineNbr": 79,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-06-12T09:55:49Z",
      "side": 1,
      "message": "Supporting multiple listeners does not seem to be a topic of this change. I would propose\nto address this topic into an own change. We may want to consider using Guava\u0027s EventBus\nfor this purpose instead of the explicit handling of the listeners like it is done in this change.",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 79,
        "endChar": 96
      },
      "revId": "0788c3c41c014359d8f2c2927a7cbabc75fb7f01",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16ad0aaf_bc09b703",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationModule.java",
        "patchSetId": 5
      },
      "lineNbr": 79,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-06-12T19:13:53Z",
      "side": 1,
      "message": "I could move to a separate change, however, it won\u0027t be clear why it is needed without the code in this change.\n\nWith regards to EventBus, I believe is a good idea and it would deserve a follow-up change for that.\nIt would be nice also to introduce in Gerrit and making it pluggable.\n\nIt has already been discussed and agreed in the conferences that Gerrit needs an event-bus and should not necessarily be inside the Gerrit JVM and potentially externalizable.\n\nOnce that interface is in place, it is definitely a good idea to reuse it here also.\n\nWDYT?",
      "parentUuid": "f15e2256_02673f0d",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 79,
        "endChar": 96
      },
      "revId": "0788c3c41c014359d8f2c2927a7cbabc75fb7f01",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5db3a8c7_5eabe3b8",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationQueue.java",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-06-12T09:55:49Z",
      "side": 1,
      "message": "Why do we need to inject Provider here?",
      "revId": "0788c3c41c014359d8f2c2927a7cbabc75fb7f01",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e6c1b0a_9d255b24",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationQueue.java",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-06-12T19:13:53Z",
      "side": 1,
      "message": "Yes, for the same reason that the Provider\u003cReplicationQueue\u003e is needed in the ReplicationDestination.\n\nHaving a Provider\u003c\u003e allows resolving the circular dependency in Guice.",
      "parentUuid": "5db3a8c7_5eabe3b8",
      "revId": "0788c3c41c014359d8f2c2927a7cbabc75fb7f01",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}