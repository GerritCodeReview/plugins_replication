{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f653b560_1bde6796",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 30,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2023-04-06T19:35:18Z",
      "side": 1,
      "message": "I don\u0027t think this statement is true, there are plenty of reasons to have separate repositories. Maybe what you mean is \"There is no reason to enforce that so many repositories be used for this purpose\"?",
      "revId": "960a242d2e3325c20883793a608b9ae1c5b15e29",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2d2e21e0_bb0f1c50",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 30,
      "author": {
        "id": 1040243
      },
      "writtenOn": "2023-04-06T20:04:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f653b560_1bde6796",
      "revId": "960a242d2e3325c20883793a608b9ae1c5b15e29",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4646eb18_98b6a812",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 33,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2023-04-06T19:35:18Z",
      "side": 1,
      "message": "Without an enforcement method to avoid conflicts, this could result in an \"infinite\" replication scenario where two different remote entries keep overwriting each other. Can you think of some way to configure this so that the plugin can sanity check this and prevent that problem?",
      "revId": "960a242d2e3325c20883793a608b9ae1c5b15e29",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be1a1142_300fd0ff",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 33,
      "author": {
        "id": 1040243
      },
      "writtenOn": "2023-04-06T20:04:12Z",
      "side": 1,
      "message": "I do not think we can do this safely, however, as this is default off and will be turned on only if sysadmin uses it, I believe it is safe to assume that whoever uses this configures the system correctly.",
      "parentUuid": "4646eb18_98b6a812",
      "revId": "960a242d2e3325c20883793a608b9ae1c5b15e29",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34e3967b_b11e4ffa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 33,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2023-04-07T13:28:14Z",
      "side": 1,
      "message": "I think you can make this safe by requiring that either the URL or the destination refspec have ${name} in it?",
      "parentUuid": "be1a1142_300fd0ff",
      "revId": "960a242d2e3325c20883793a608b9ae1c5b15e29",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d69c7007_9255325f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 33,
      "author": {
        "id": 1040243
      },
      "writtenOn": "2023-04-07T13:42:33Z",
      "side": 1,
      "message": "ok, I will do that.",
      "parentUuid": "34e3967b_b11e4ffa",
      "revId": "960a242d2e3325c20883793a608b9ae1c5b15e29",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba8ef7e3_117ee6dd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 37,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2023-04-06T19:35:18Z",
      "side": 1,
      "message": "nit: s/monitor/monitors/",
      "range": {
        "startLine": 37,
        "startChar": 13,
        "endLine": 37,
        "endChar": 21
      },
      "revId": "960a242d2e3325c20883793a608b9ae1c5b15e29",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff27a183_1756eaa0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 37,
      "author": {
        "id": 1040243
      },
      "writtenOn": "2023-04-06T20:04:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba8ef7e3_117ee6dd",
      "range": {
        "startLine": 37,
        "startChar": 13,
        "endLine": 37,
        "endChar": 21
      },
      "revId": "960a242d2e3325c20883793a608b9ae1c5b15e29",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0312b6fa_4d6d3109",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 41,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2023-04-06T19:35:18Z",
      "side": 1,
      "message": "This isn\u0027t safe as project names can contain all sorts of characters which are not legal in ref names. Perhaps this should use a different variable here then name (${name} should really have been ${project}), maybe something like ${ref_encoded_project}?",
      "range": {
        "startLine": 41,
        "startChar": 51,
        "endLine": 41,
        "endChar": 55
      },
      "revId": "960a242d2e3325c20883793a608b9ae1c5b15e29",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17183e8d_e15abfe7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 41,
      "author": {
        "id": 1040243
      },
      "writtenOn": "2023-04-06T20:04:12Z",
      "side": 1,
      "message": "`${name}` is already supported in current implementation as destination name, it is encoded based on the gerrit encoded roles, see `config.md`.\n\ncurrently the problem is that no `${name}` transfomration is reversible, after this merged I will submit a new patch for more transformation schemas.",
      "parentUuid": "0312b6fa_4d6d3109",
      "range": {
        "startLine": 41,
        "startChar": 51,
        "endLine": 41,
        "endChar": 55
      },
      "revId": "960a242d2e3325c20883793a608b9ae1c5b15e29",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "645ce814_cb3106ef",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 41,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2023-04-06T20:43:21Z",
      "side": 1,
      "message": "\u003e `${name}` is already supported in current implementation as destination name, it is encoded based on the gerrit encoded roles, see `config.md`.\n\nI am not sure I understand what you are saying here?\n\nIf you are referring to URL encoding? That works for URLs, but not for refs, refs names are very restrictive.\n\n\u003e currently the problem is that no `${name}` transfomration is reversible, \n\nI don\u0027t understand what you mean by this, and why it is relevant?\n\nIt appears that you are altering the way that ${name} is encoded, or providing some new encoding mechanisms in this change? The commit message should probably explain how you plan to encode things?\n\n\u003e after this merged I will submit a new patch for more transformation schemas.\n\nI am not sure what if you are proposing merging this \"broken\", we don\u0027t do that.",
      "parentUuid": "17183e8d_e15abfe7",
      "range": {
        "startLine": 41,
        "startChar": 51,
        "endLine": 41,
        "endChar": 55
      },
      "revId": "960a242d2e3325c20883793a608b9ae1c5b15e29",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41971288_2a8c8e58",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 41,
      "author": {
        "id": 1040243
      },
      "writtenOn": "2023-04-07T12:10:34Z",
      "side": 1,
      "message": "I do not think it is broken, it can be improved.\n\nCurrently I use it with `remoteNameStyle \u003d underscore` and it works nicely, it will work nicely also with dash, basenameOnly.\n\nI thought of extending this to generic function such as regular expression or uri encode and I thought of doing that later after the reorg if you prefer I can do this now.",
      "parentUuid": "645ce814_cb3106ef",
      "range": {
        "startLine": 41,
        "startChar": 51,
        "endLine": 41,
        "endChar": 55
      },
      "revId": "960a242d2e3325c20883793a608b9ae1c5b15e29",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1783be7_a1f17dfa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 41,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2023-04-07T13:28:14Z",
      "side": 1,
      "message": "\u003e I do not think it is broken, it can be improved.\n\u003e \n\u003e Currently I use it with `remoteNameStyle \u003d underscore` and it works nicely, it will work nicely also with dash, basenameOnly.\n\nI was not aware of that setting, thanks for the pointer.\n\n\u003e I thought of extending this to generic function such as regular expression or uri encode and I thought of doing that later after the reorg if you prefer I can do this now.\n\nI think that ${name} already is being URI encoded also, is it not? (it happens that slash \"/\" is legal in URIs, just not in github? I was not worried about slashes, they are legal in ref names. However I believe many other, even URI encoded characters are illegal. I quick search got me here:\n\nhttps://stackoverflow.com/questions/3651860/which-characters-are-illegal-within-a-branch-name\n\nwhich seems to indicate that even dots (\".\") in the wrong places can be problematic. I do think you need to figure out a safe encoding that can be applied automatically for refs before this change can be merged.",
      "parentUuid": "41971288_2a8c8e58",
      "range": {
        "startLine": 41,
        "startChar": 51,
        "endLine": 41,
        "endChar": 55
      },
      "revId": "960a242d2e3325c20883793a608b9ae1c5b15e29",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a46e2d39_75f01823",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 41,
      "author": {
        "id": 1040243
      },
      "writtenOn": "2023-04-07T13:42:33Z",
      "side": 1,
      "message": "thanks for the reference after template transformation, I will apply URL enode for these cases, will it be ok?",
      "parentUuid": "f1783be7_a1f17dfa",
      "range": {
        "startLine": 41,
        "startChar": 51,
        "endLine": 41,
        "endChar": 55
      },
      "revId": "960a242d2e3325c20883793a608b9ae1c5b15e29",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "538d115a_67f76611",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 41,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2023-04-07T13:51:38Z",
      "side": 1,
      "message": "\u003e thanks for the reference after template transformation, I will apply URL enode for these cases, will it be ok?\n\nNo, I don\u0027t, see above. We are not likely the first people that want to be able to encode arbitrary strings into refnames, so perhaps some extra research will yield a reliable solution?",
      "parentUuid": "a46e2d39_75f01823",
      "range": {
        "startLine": 41,
        "startChar": 51,
        "endLine": 41,
        "endChar": 55
      },
      "revId": "960a242d2e3325c20883793a608b9ae1c5b15e29",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b61b6d5_0ba9e79a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 41,
      "author": {
        "id": 1040243
      },
      "writtenOn": "2023-04-07T13:58:41Z",
      "side": 1,
      "message": "I mean that after replaceing the `${name}`, and if I have for example a `..` I will replace it with `%2e%2e` as `%` is allowed, and in similar do this for all the other exceptions.",
      "parentUuid": "538d115a_67f76611",
      "range": {
        "startLine": 41,
        "startChar": 51,
        "endLine": 41,
        "endChar": 55
      },
      "revId": "960a242d2e3325c20883793a608b9ae1c5b15e29",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e704316_58570ce0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 41,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2023-04-07T14:09:15Z",
      "side": 1,
      "message": "\u003e I mean that after replaceing the `${name}`, and if I have for example a `..` I will replace it with `%2e%2e` as `%` is allowed, and in similar do this for all the other exceptions.\n\nGotcha, I understand your proposal now I think. Ideally we would not be inventing our own encoding as that is likely error prone.",
      "parentUuid": "1b61b6d5_0ba9e79a",
      "range": {
        "startLine": 41,
        "startChar": 51,
        "endLine": 41,
        "endChar": 55
      },
      "revId": "960a242d2e3325c20883793a608b9ae1c5b15e29",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c11716d2_b7b65fd0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 41,
      "author": {
        "id": 1040243
      },
      "writtenOn": "2023-04-07T14:16:39Z",
      "side": 1,
      "message": "Any other suggestion? I can add an encoding to use `base64(${name})`",
      "parentUuid": "6e704316_58570ce0",
      "range": {
        "startLine": 41,
        "startChar": 51,
        "endLine": 41,
        "endChar": 55
      },
      "revId": "960a242d2e3325c20883793a608b9ae1c5b15e29",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "084fff90_57afcaa9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 41,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2023-04-07T15:19:54Z",
      "side": 1,
      "message": "- JGit\u0027s Repository#isValidRefName can be used to check if a string is a valid refname\n- JGit\u0027s Repository#normalizeBranchName can be used to transform a string to a similar string which is a valid ref name. This method is used by EGit to propose branch names based on user input which may contain characters not valid in ref names.",
      "parentUuid": "c11716d2_b7b65fd0",
      "range": {
        "startLine": 41,
        "startChar": 51,
        "endLine": 41,
        "endChar": 55
      },
      "revId": "960a242d2e3325c20883793a608b9ae1c5b15e29",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "004fbb04_75cd447c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 41,
      "author": {
        "id": 1040243
      },
      "writtenOn": "2023-04-07T15:35:06Z",
      "side": 1,
      "message": "Thank you @matthias.sohn@gmail.com,\nI will use the `Repository#normalizeBranchName`.",
      "parentUuid": "084fff90_57afcaa9",
      "range": {
        "startLine": 41,
        "startChar": 51,
        "endLine": 41,
        "endChar": 55
      },
      "revId": "960a242d2e3325c20883793a608b9ae1c5b15e29",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f87ecc8e_47b14fb5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 41,
      "author": {
        "id": 1040243
      },
      "writtenOn": "2023-04-07T17:50:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "004fbb04_75cd447c",
      "range": {
        "startLine": 41,
        "startChar": 51,
        "endLine": 41,
        "endChar": 55
      },
      "revId": "960a242d2e3325c20883793a608b9ae1c5b15e29",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31a79b4e_81f6ae64",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 21
      },
      "lineNbr": 0,
      "author": {
        "id": 1040243
      },
      "writtenOn": "2023-04-06T20:04:12Z",
      "side": 1,
      "message": "Thank you for reviewing.",
      "revId": "960a242d2e3325c20883793a608b9ae1c5b15e29",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}