{
  "comments": [
    {
      "key": {
        "uuid": "d478e6ca_7edee289",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-22T23:28:57Z",
      "side": 1,
      "message": "Very good initiative Nasser: this defines the interface and expected behaviour for the replication tasks, which we can then rely on moving forward.",
      "revId": "0dd2229155ec163e1743a5d7cbb9730d0379f57f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41332263_fa43f0ef",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorage.java",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-22T23:28:57Z",
      "side": 1,
      "message": "Task isn\u0027t part of the external interface of the ReplicationTaskStorage: should the test just use the public methods? What\u0027s the rationale of exposing the Task just for the tests and then not using them in the way the component is used?\n\nHave you tried keeping this class private and use the other interface methods for testing?\n(e.g. start, reset, resetAll, finish)",
      "range": {
        "startLine": 208,
        "startChar": 2,
        "endLine": 209,
        "endChar": 12
      },
      "revId": "0dd2229155ec163e1743a5d7cbb9730d0379f57f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac4e3162_ab675627",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorage.java",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-07-22T23:56:09Z",
      "side": 1,
      "message": "I have another change that I\u0027ll upload soon that tests the methods at the ReplicationTasksStorage layer directly.\n\nAs you note, the advantage of testing Task directly is that it\u0027s much more flexible with how it can be exercised.",
      "parentUuid": "41332263_fa43f0ef",
      "range": {
        "startLine": 208,
        "startChar": 2,
        "endLine": 209,
        "endChar": 12
      },
      "revId": "0dd2229155ec163e1743a5d7cbb9730d0379f57f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3e2805d_467a602a",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorageTaskTest.java",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-22T23:28:57Z",
      "side": 1,
      "message": "This is using an in-memory filesystem, which is very unlikely to be used in the real scenario.\nHave you tried to use a real local filesystem? If yes, was it working fine for the purpose?",
      "range": {
        "startLine": 46,
        "startChar": 4,
        "endLine": 46,
        "endChar": 59
      },
      "revId": "0dd2229155ec163e1743a5d7cbb9730d0379f57f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b597acc_b3eea30d",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorageTaskTest.java",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-07-22T23:56:09Z",
      "side": 1,
      "message": "I didn\u0027t try. I thought all the Gerrit tests used jimfs now for this purpose?",
      "parentUuid": "a3e2805d_467a602a",
      "range": {
        "startLine": 46,
        "startChar": 4,
        "endLine": 46,
        "endChar": 59
      },
      "revId": "0dd2229155ec163e1743a5d7cbb9730d0379f57f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22f8e8ef_5dc656a0",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorageTaskTest.java",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-23T21:18:50Z",
      "side": 1,
      "message": "Because the replication task storage relies directly on the underlying filesystem capabilities, I would suggest to make a more specific decision on what to test against. It\u0027s all about confidence that our tests are actually representative or not.",
      "parentUuid": "3b597acc_b3eea30d",
      "range": {
        "startLine": 46,
        "startChar": 4,
        "endLine": 46,
        "endChar": 59
      },
      "revId": "0dd2229155ec163e1743a5d7cbb9730d0379f57f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a313f08_58ad26e1",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorageTaskTest.java",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-07-23T21:58:15Z",
      "side": 1,
      "message": "That seems more applicable to integration tests, not for unit tests. I would suggest we stick with jimfs for now, and someone can add extra support for a local filesystem as well later.",
      "parentUuid": "22f8e8ef_5dc656a0",
      "range": {
        "startLine": 46,
        "startChar": 4,
        "endLine": 46,
        "endChar": 59
      },
      "revId": "0dd2229155ec163e1743a5d7cbb9730d0379f57f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9ac6b6e_9acbb9b4",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorageTaskTest.java",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-22T23:28:57Z",
      "side": 1,
      "message": "Having more tailored asserts would improve readability and also the message displayed in case of failure.\n\nWhat about introducing an \u0027assertIsWaiting(\u003ctask\u003e)\u0027, \u0027assertIsWaiting(\u003ctask\u003e)\u0027, ... ?\n\nAlso, asserting that a task is in one state, should also include the check that the task isn\u0027t in any of the the other states.",
      "range": {
        "startLine": 64,
        "startChar": 4,
        "endLine": 64,
        "endChar": 44
      },
      "revId": "0dd2229155ec163e1743a5d7cbb9730d0379f57f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c93a4b9_f3d578d7",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorageTaskTest.java",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-07-22T23:56:09Z",
      "side": 1,
      "message": "I can add those assert helpers, thanks for suggesting them.\n\nI disagree about asserting one state means it must not be in another state. That might be true for some tests (and I can add that where applicable, within reason because I think otherwise it will add many extra asserts) but not all (such as the createWaitingTaskWhileTaskIsRunning test).",
      "parentUuid": "d9ac6b6e_9acbb9b4",
      "range": {
        "startLine": 64,
        "startChar": 4,
        "endLine": 64,
        "endChar": 44
      },
      "revId": "0dd2229155ec163e1743a5d7cbb9730d0379f57f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38ec8c06_3386782d",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorageTaskTest.java",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-23T21:18:50Z",
      "side": 1,
      "message": "Does this mean that one replication task could potentially be in two states at the same time? What would be the underlying filesystem representation in that case? Two files? One file with a symlink in another directory?",
      "parentUuid": "0c93a4b9_f3d578d7",
      "range": {
        "startLine": 64,
        "startChar": 4,
        "endLine": 64,
        "endChar": 44
      },
      "revId": "0dd2229155ec163e1743a5d7cbb9730d0379f57f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b6ac680_85421a69",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorageTaskTest.java",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-07-23T21:58:15Z",
      "side": 1,
      "message": "Each task is work for a given ref update. It\u0027s perfectly ok for one update to be running and another to be waiting. That would be two files in different directories (waiting/ running/).",
      "parentUuid": "38ec8c06_3386782d",
      "range": {
        "startLine": 64,
        "startChar": 4,
        "endLine": 64,
        "endChar": 44
      },
      "revId": "0dd2229155ec163e1743a5d7cbb9730d0379f57f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bfde54d_91349e56",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorageTaskTest.java",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-22T23:28:57Z",
      "side": 1,
      "message": "What about assertions on the isBuilding state?",
      "revId": "0dd2229155ec163e1743a5d7cbb9730d0379f57f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f0e052e_340226eb",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorageTaskTest.java",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-07-22T23:56:09Z",
      "side": 1,
      "message": "There\u0027s no methods on Task to inspect that. Do you have an approach for how you\u0027d do it? I avoid adding test code to prod classes unless absolutely necessary.",
      "parentUuid": "0bfde54d_91349e56",
      "revId": "0dd2229155ec163e1743a5d7cbb9730d0379f57f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30e8765c_eb16a059",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorageTaskTest.java",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-22T23:28:57Z",
      "side": 1,
      "message": "Also, assertFalse(whiteBoxIsBuilding(\u003c\u003e))",
      "revId": "0dd2229155ec163e1743a5d7cbb9730d0379f57f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e369c88_e7d7612c",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorageTaskTest.java",
        "patchSetId": 1
      },
      "lineNbr": 124,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-22T23:28:57Z",
      "side": 1,
      "message": "The method name suggests the the second task will be created as waiting, but the code is asserting that is both waiting and running? Is that correct?",
      "range": {
        "startLine": 124,
        "startChar": 14,
        "endLine": 124,
        "endChar": 31
      },
      "revId": "0dd2229155ec163e1743a5d7cbb9730d0379f57f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f886aba9_876b7b23",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorageTaskTest.java",
        "patchSetId": 1
      },
      "lineNbr": 124,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-07-22T23:56:09Z",
      "side": 1,
      "message": "Hmm, I think there\u0027s a typo in the name. It should be \u0027createWaitingTaskWhileTaskIsRunning\u0027.",
      "parentUuid": "3e369c88_e7d7612c",
      "range": {
        "startLine": 124,
        "startChar": 14,
        "endLine": 124,
        "endChar": 31
      },
      "revId": "0dd2229155ec163e1743a5d7cbb9730d0379f57f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "058abdcf_5b5483c3",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorageTaskTest.java",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-22T23:28:57Z",
      "side": 1,
      "message": "What \"squashed\u0027 means in this context? Can you elaborate?\nIs there something we can do to verify that it happens from the test code?",
      "range": {
        "startLine": 189,
        "startChar": 33,
        "endLine": 189,
        "endChar": 45
      },
      "revId": "0dd2229155ec163e1743a5d7cbb9730d0379f57f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7da93194_ff091a19",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorageTaskTest.java",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-07-22T23:56:09Z",
      "side": 1,
      "message": "squashed means they aren\u0027t thrown from the method (but logs are written). There is not a way to confirm the expected log message unless we intercept the logger and inspect the message (which I don\u0027t think is good because then we\u0027re parsing log messages in our tests, and that\u0027s super fragile).\n\nThe test code is verifying that an exception is NOT thrown (thus the \"IsGraceful\" part of the name), so I don\u0027t think this test needs to change to be doing a useful job.",
      "parentUuid": "058abdcf_5b5483c3",
      "range": {
        "startLine": 189,
        "startChar": 33,
        "endLine": 189,
        "endChar": 45
      },
      "revId": "0dd2229155ec163e1743a5d7cbb9730d0379f57f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d30b8988_24136948",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorageTaskTest.java",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-23T21:18:50Z",
      "side": 1,
      "message": "Gotcha, so \"squashed\" means that have been recovered and do not need to be thrown anymore. What\u0027s the purpose of logging them? Does the Gerrit admin need to take any action? If not, I would just even avoid putting the comment because it won\u0027t be asserting anything really from a test\u0027s perspective.\n\nWDYT?",
      "parentUuid": "7da93194_ff091a19",
      "range": {
        "startLine": 189,
        "startChar": 33,
        "endLine": 189,
        "endChar": 45
      },
      "revId": "0dd2229155ec163e1743a5d7cbb9730d0379f57f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d95b011_72f82ac6",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorageTaskTest.java",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-07-23T21:58:15Z",
      "side": 1,
      "message": "I\u0027m not trying to change the functional behavior in this change. However, I (and I think Martin) would be fine with not logging those messages.\n\nI can remove the comment on this line.",
      "parentUuid": "d30b8988_24136948",
      "range": {
        "startLine": 189,
        "startChar": 33,
        "endLine": 189,
        "endChar": 45
      },
      "revId": "0dd2229155ec163e1743a5d7cbb9730d0379f57f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}