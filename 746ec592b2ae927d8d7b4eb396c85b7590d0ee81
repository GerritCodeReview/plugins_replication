{
  "comments": [
    {
      "key": {
        "uuid": "75ba65fa_43385c33",
        "filename": "/COMMIT_MSG",
        "patchSetId": 32
      },
      "lineNbr": 17,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-08-26T13:17:16Z",
      "side": 1,
      "message": "This change fixes",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 5
      },
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb497efe_7e948b09",
        "filename": "/COMMIT_MSG",
        "patchSetId": 32
      },
      "lineNbr": 17,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-08-26T13:48:10Z",
      "side": 1,
      "message": "Actually we should use the imperative form, it should be \u0027Fix\u0027",
      "parentUuid": "75ba65fa_43385c33",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 5
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9519a9a_07fc3a7c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 32
      },
      "lineNbr": 18,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-08-26T13:17:16Z",
      "side": 1,
      "message": "what is meant by this?",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 18,
        "endChar": 29
      },
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e025285c_b9cba78e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 32
      },
      "lineNbr": 18,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-08-26T13:48:10Z",
      "side": 1,
      "message": "The reference counting is broken and may either remove prematurely remove the events on the filesystem or leave them forever, even when the replication is completed on all nodes.",
      "parentUuid": "b9519a9a_07fc3a7c",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 18,
        "endChar": 29
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a4f88c0_18077d35",
        "filename": "/COMMIT_MSG",
        "patchSetId": 32
      },
      "lineNbr": 22,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-08-26T13:17:16Z",
      "side": 1,
      "message": "replication tasks",
      "range": {
        "startLine": 22,
        "startChar": 37,
        "endLine": 22,
        "endChar": 43
      },
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2126e20d_10660905",
        "filename": "/COMMIT_MSG",
        "patchSetId": 32
      },
      "lineNbr": 22,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-08-26T13:48:10Z",
      "side": 1,
      "message": "Previously were ref-update events and now we store replication events. Will make the statement clearer.",
      "parentUuid": "7a4f88c0_18077d35",
      "range": {
        "startLine": 22,
        "startChar": 37,
        "endLine": 22,
        "endChar": 43
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5287ec72_bc692a33",
        "filename": "/COMMIT_MSG",
        "patchSetId": 32
      },
      "lineNbr": 22,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-08-26T13:50:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2126e20d_10660905",
      "range": {
        "startLine": 22,
        "startChar": 37,
        "endLine": 22,
        "endChar": 43
      },
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8cf5d85d_650738bf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 32
      },
      "lineNbr": 26,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-08-26T13:17:16Z",
      "side": 1,
      "message": "This paragraph can be removed as this is already mentioned and discussed above.",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 26,
        "endChar": 7
      },
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c541dce6_9b1b2e1d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 32
      },
      "lineNbr": 26,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-08-26T13:48:10Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8cf5d85d_650738bf",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 26,
        "endChar": 7
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d36447b9_e61f2c40",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationQueue.java",
        "patchSetId": 32
      },
      "lineNbr": 152,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-08-26T13:17:16Z",
      "side": 1,
      "message": "If I follow the code well both 151 and 152 statements will reach the ReplicationTasksStorage.persist method for each task. The call from 151 is obvious.\nThe line 152 will call:\n\n  ReplicationTasksStorage.persist\n  Destination.schedule:403\n  Destination.schedule:358\n  ReplicationQueue:152\n  \nCan we avoid persisting each task twice?",
      "range": {
        "startLine": 151,
        "startChar": 0,
        "endLine": 152,
        "endChar": 53
      },
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8d68576_811b3e38",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationQueue.java",
        "patchSetId": 32
      },
      "lineNbr": 152,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-08-26T13:48:10Z",
      "side": 1,
      "message": "It isn\u0027t going to be persisted twice, because of a guard in the storage. The problem here is that the replication task can come from either a ref-update (this call) or direct scheduling. \n\n  (1) Destination.schedule:403 \u003c\u003d this call is redundant\n  (2) Destination.schedule:358 \u003c\u003d this call is for manually trigged replication\n  (3) ReplicationQueue:152 \u003c\u003d this call is for ref-update triggered replication\n\nI will go and remove the (1).\n\nP.S. Redundant calls are not a problem, because there is a guard in the persistence layer. Missing a call *IS* a problem because we may risk losing that event.",
      "parentUuid": "d36447b9_e61f2c40",
      "range": {
        "startLine": 151,
        "startChar": 0,
        "endLine": 152,
        "endChar": 53
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3d5f1ec_2c0c64a9",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationQueue.java",
        "patchSetId": 32
      },
      "lineNbr": 152,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-08-26T14:44:32Z",
      "side": 1,
      "message": "\u003e P.S. Redundant calls are not a problem, because there is a guard in the persistence layer. Missing a call *IS* a problem because we may risk losing that event.\n\nI know that redundant calls are not a problem but this doesn\u0027t justify adding more and\nmore redundant persist calls just to be even safer that we will not loose it ;-)",
      "parentUuid": "c8d68576_811b3e38",
      "range": {
        "startLine": 151,
        "startChar": 0,
        "endLine": 152,
        "endChar": 53
      },
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c6761e2_5b72ecbd",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationQueue.java",
        "patchSetId": 32
      },
      "lineNbr": 159,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-08-26T13:17:16Z",
      "side": 1,
      "message": "Tasks",
      "range": {
        "startLine": 159,
        "startChar": 26,
        "endLine": 159,
        "endChar": 32
      },
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37eb8b66_271b5c39",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationQueue.java",
        "patchSetId": 32
      },
      "lineNbr": 159,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-08-26T13:48:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0c6761e2_5b72ecbd",
      "range": {
        "startLine": 159,
        "startChar": 26,
        "endLine": 159,
        "endChar": 32
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe6e8707_9ce41323",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationQueue.java",
        "patchSetId": 32
      },
      "lineNbr": 159,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-08-26T14:44:32Z",
      "side": 1,
      "message": "This should only be renamed if we are really replaying the replication tasks.\nAs I learned from your answer on my next comment, this method was really replaying the\nref-updated events.",
      "parentUuid": "37eb8b66_271b5c39",
      "range": {
        "startLine": 159,
        "startChar": 26,
        "endLine": 159,
        "endChar": 32
      },
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8c57aa4_b40b70d1",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationQueue.java",
        "patchSetId": 32
      },
      "lineNbr": 165,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-08-26T13:17:16Z",
      "side": 1,
      "message": "Why is this needed? Isn\u0027t every task key representing one unique push operation?\nWhy do we limit to project+ref here?",
      "range": {
        "startLine": 164,
        "startChar": 0,
        "endLine": 165,
        "endChar": 47
      },
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a504470_f9c913cb",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationQueue.java",
        "patchSetId": 32
      },
      "lineNbr": 165,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-08-26T13:48:10Z",
      "side": 1,
      "message": "What would be the point of re-triggering a ref-update multiple times?\nWe persist replication tasks but we replay ref-updates.",
      "parentUuid": "e8c57aa4_b40b70d1",
      "range": {
        "startLine": 164,
        "startChar": 0,
        "endLine": 165,
        "endChar": 47
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2c7f7bc_389a6c78",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationQueue.java",
        "patchSetId": 32
      },
      "lineNbr": 165,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-08-26T14:44:32Z",
      "side": 1,
      "message": "\u003e We persist replication tasks but we replay ref-updates.\n\nThanks. Now I see that it is replaying the ref-update events.\n\nI was thinking in a different way: before we persisted replication tasks\nwe had to compute them for reach ref-updated event when processing that event.\nWhy don\u0027t we simply re-trigger the already computed tasks?\nIn other words, why compute the replication tasks again?",
      "parentUuid": "8a504470_f9c913cb",
      "range": {
        "startLine": 164,
        "startChar": 0,
        "endLine": 165,
        "endChar": 47
      },
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1320c4ec_8d678d24",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorage.java",
        "patchSetId": 32
      },
      "lineNbr": 42,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-08-26T13:17:16Z",
      "side": 1,
      "message": "Before this change we only persisted events (project + ref). When scheduling replication\ntasks we looked at the current replication.config and based on that configuration created\nthe tasks. All of the tasks were created based on the same config snapshot.\n\nNow we persist the uri and the remote name additionally. However, we do not persist other\nproperties from the configuration snapshot like: \"push\", \"adminUrl\", etc...\nAssuming replication.config gets changed while a set of replication tasks are being processed\nit may happen that some of the tasks are processed with the old configuration snapshot\nand some of them are processed with the new configuration snapshot. For example, we may\nadd a new push key:\n\n  [remote \"foo\"]\n     url \u003d foo_1\n     url \u003d foo_2\n     push \u003d refs/heads/*:refs/heads/*\n     push \u003d refs/foo/*:refs/foo/*       \u003c\u003c\u003c NEW\n\nIt may happen that we apply the newly added push only when pushing to foo_2 if the configuration\nis reloaded after the push to foo_1 is finished and before push to foo_2 is scheduled.\n\nThis may or may not be an issue (I don\u0027t have a strong opinion on that yet) but this needs\nto be mentioned and discussed in the commit message and also in the config.md.",
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f648ebb_7913b040",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorage.java",
        "patchSetId": 32
      },
      "lineNbr": 42,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-08-26T13:48:10Z",
      "side": 1,
      "message": "I believe the problem you are describing existed before already.\n\nYou are basically saying that if someone changes the replication.config when there were pending events, then the replay of those events would be applied to a different configuration of remotes and, possibly, have unexpected effects.\n\nYes, I agree, but that is not the problem we are targeting with this fix.\nThis fix, of course, does not cover that case and is not solving it but not making it worse either.",
      "parentUuid": "1320c4ec_8d678d24",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25604d95_0c4dbd11",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorage.java",
        "patchSetId": 32
      },
      "lineNbr": 42,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-08-26T14:44:32Z",
      "side": 1,
      "message": "It seems to me that it is making it a bit worse because now we can get different effects\nfor replication tasks within one remote section. Before this change, we at least\nused one consistent look of a remote section when processing a ref-updated event.\nAm I wrong here?",
      "parentUuid": "2f648ebb_7913b040",
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c7ce42d_e1b33332",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorage.java",
        "patchSetId": 32
      },
      "lineNbr": 42,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-08-26T14:47:02Z",
      "side": 1,
      "message": "Answering to myself, I think that I am wrong here :-)\nEven before we could have different effects when replication plugin gets restarted before\nall pushes for one event are finished.",
      "parentUuid": "25604d95_0c4dbd11",
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e35ab6f9_c76b8e95",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorage.java",
        "patchSetId": 32
      },
      "lineNbr": 59,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-08-26T13:17:16Z",
      "side": 1,
      "message": "Should this quadruple rather be replaced with one parameter of ReplicationRefUpdate type?\nsame for the delete method (line 83)",
      "range": {
        "startLine": 59,
        "startChar": 24,
        "endLine": 59,
        "endChar": 77
      },
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8a5bae6_1b4dece0",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorage.java",
        "patchSetId": 32
      },
      "lineNbr": 59,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-08-26T13:48:10Z",
      "side": 1,
      "message": "I am not sure I understand, as I do not find the ReplicationRefUpdate type anywhere.\nCan you please explain in different words?",
      "parentUuid": "e35ab6f9_c76b8e95",
      "range": {
        "startLine": 59,
        "startChar": 24,
        "endLine": 59,
        "endChar": 77
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "662bfc71_0de28d59",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorage.java",
        "patchSetId": 32
      },
      "lineNbr": 59,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-08-26T14:44:32Z",
      "side": 1,
      "message": "ReplicateRefUpdate, line 38 in this file :-)",
      "parentUuid": "e8a5bae6_1b4dece0",
      "range": {
        "startLine": 59,
        "startChar": 24,
        "endLine": 59,
        "endChar": 77
      },
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0dd2b6a_5782b01b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorage.java",
        "patchSetId": 32
      },
      "lineNbr": 78,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2019-08-26T10:57:32Z",
      "side": 1,
      "message": "This should be included in the log by calling withCause(e)",
      "range": {
        "startLine": 78,
        "startChar": 62,
        "endLine": 78,
        "endChar": 67
      },
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f412026e_88d110cf",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorage.java",
        "patchSetId": 32
      },
      "lineNbr": 78,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-08-26T13:07:26Z",
      "side": 1,
      "message": "Good catch.",
      "parentUuid": "b0dd2b6a_5782b01b",
      "range": {
        "startLine": 78,
        "startChar": 62,
        "endLine": 78,
        "endChar": 67
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d307fee4_0d2e9f3c",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorage.java",
        "patchSetId": 32
      },
      "lineNbr": 107,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-08-26T13:17:16Z",
      "side": 1,
      "message": "I don\u0027t know why we deleted it from here but now with the replication tasks it makes even less\nsense to delete the task from here. A task should only be deleted once it is done.",
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b161f14_abb19fde",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorage.java",
        "patchSetId": 32
      },
      "lineNbr": 107,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-08-26T13:48:10Z",
      "side": 1,
      "message": "Oh man, good catch. Thanks a lot.\nYes, it is wrong to remove the files here because we do not know upfront if and when they\u0027ll be completed.",
      "parentUuid": "d307fee4_0d2e9f3c",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bc55aa8_289309a6",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationIT.java",
        "patchSetId": 32
      },
      "lineNbr": 54,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2019-08-26T10:57:32Z",
      "side": 1,
      "message": "private?",
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80dd1eb9_1145f806",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationIT.java",
        "patchSetId": 32
      },
      "lineNbr": 54,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-08-26T13:07:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3bc55aa8_289309a6",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7417a105_86680f27",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationIT.java",
        "patchSetId": 32
      },
      "lineNbr": 179,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2019-08-26T10:57:32Z",
      "side": 1,
      "message": "We usually import methods from Collectors as static",
      "range": {
        "startLine": 179,
        "startChar": 21,
        "endLine": 179,
        "endChar": 41
      },
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31e14c04_50e80af3",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationIT.java",
        "patchSetId": 32
      },
      "lineNbr": 179,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-08-26T13:07:26Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7417a105_86680f27",
      "range": {
        "startLine": 179,
        "startChar": 21,
        "endLine": 179,
        "endChar": 41
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "746ec592b2ae927d8d7b4eb396c85b7590d0ee81",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}