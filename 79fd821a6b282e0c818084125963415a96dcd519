{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4d8112e5_d4210bbd",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationUtil.java",
        "patchSetId": 21
      },
      "lineNbr": 19,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-01-08T17:08:40Z",
      "side": 1,
      "message": "Let\u0027s please not create util classes. These become dumping grounds for code. I think this would make (or is the start of) a nice helper class in a new replication.events subpackage. I\u0027m not sure what it should be named, because maybe it should be doing more that\u0027s common across building events. replication.events.BuilderHelper is the rough idea in my head, but again, I haven\u0027t really investigated the event code, so hopefully you can improve on that ðŸ˜Š",
      "range": {
        "startLine": 19,
        "startChar": 12,
        "endLine": 19,
        "endChar": 28
      },
      "revId": "79fd821a6b282e0c818084125963415a96dcd519",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59c9ce81_4fd5fcaa",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationUtil.java",
        "patchSetId": 21
      },
      "lineNbr": 19,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-01-09T17:09:49Z",
      "side": 1,
      "message": "I don\u0027t find anything inherently wrong with util classes, when they hold _actual_ utils. I think it is up to good code reviews to prevent them from becoming dumping grounds ðŸ˜Š\n\nThe reason I chose util is because I believe that resolveName() is just an utility that allows to parse node names from URIs: I don\u0027t think it belongs to the \u0027events\u0027 namespace because it is not just used for events, here[1] for example is used for logging.\n\nI am happy to change this to something more appropriate, but I am still pondering what that might be.\n\n\n[1]https://gerrit.googlesource.com/plugins/replication/+/refs/heads/master/src/main/java/com/googlesource/gerrit/plugins/replication/PushResultProcessing.java#112",
      "parentUuid": "4d8112e5_d4210bbd",
      "range": {
        "startLine": 19,
        "startChar": 12,
        "endLine": 19,
        "endChar": 28
      },
      "revId": "79fd821a6b282e0c818084125963415a96dcd519",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98aa197a_468dd2ba",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationUtil.java",
        "patchSetId": 21
      },
      "lineNbr": 19,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-01-20T14:50:07Z",
      "side": 1,
      "message": "\u003e I don\u0027t find anything inherently wrong with util classes, when they hold _actual_ utils. I think it is up to good code reviews to prevent them from becoming dumping grounds ðŸ˜Š\n\nI don\u0027t think you commonly find util classes in good libraries. Better to make reviewers\u0027 lives easier and avoid them. ðŸ˜Š\n\n\u003e \n\u003e The reason I chose util is because I believe that resolveName() is just an utility that allows to parse node names from URIs: I don\u0027t think it belongs to the \u0027events\u0027 namespace because it is not just used for events, here[1] for example is used for logging.\n\nOk. Maybe the better question then is why we\u0027re using resolveNodeName() at all? For example, why not use the URIish as-is? What benefit does resolveNodeName provide?\n\n\u003e \n\u003e I am happy to change this to something more appropriate, but I am still pondering what that might be.\n\nI admit I\u0027m not sure either, but maybe we can figure it out if we understand the method and its intended usage better.",
      "parentUuid": "59c9ce81_4fd5fcaa",
      "range": {
        "startLine": 19,
        "startChar": 12,
        "endLine": 19,
        "endChar": 28
      },
      "revId": "79fd821a6b282e0c818084125963415a96dcd519",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1ef4818_99ec1e8f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationUtil.java",
        "patchSetId": 21
      },
      "lineNbr": 19,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-01-20T18:53:40Z",
      "side": 1,
      "message": "Did a bit of digging to find the birth of this method[1].\n\nLooks like it originated a while ago from an attempt to log node names/ports/protocols unambiguously.\n\nHow about a static ReplicationTarget.format() ?\n\n\n[1]https://gerrit-review.googlesource.com/c/plugins/replication/+/50500",
      "parentUuid": "98aa197a_468dd2ba",
      "range": {
        "startLine": 19,
        "startChar": 12,
        "endLine": 19,
        "endChar": 28
      },
      "revId": "79fd821a6b282e0c818084125963415a96dcd519",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41486dda_3dac4d23",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationUtil.java",
        "patchSetId": 21
      },
      "lineNbr": 19,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-01-22T20:36:34Z",
      "side": 1,
      "message": "\u003e Did a bit of digging to find the birth of this method[1].\n\u003e \n\u003e Looks like it originated a while ago from an attempt to log node names/ports/protocols unambiguously.\n\nOof, that\u0027s worse than I thought. I don\u0027t even think that was for logging, it looks like it was only for output to the StartCommand (AFAIK that\u0027s the only place CommandProcessing has ever been used). That it got reused later for events was probably a mistake.\n\nIs there a technical reason not to use the complete URIish (or modified to not include the project)? Events aren\u0027t exactly supposed to be consumed by humans. Obviously it would be inconsistent with other replication events if we don\u0027t change them too, but I think it would be worth changing them.",
      "parentUuid": "d1ef4818_99ec1e8f",
      "range": {
        "startLine": 19,
        "startChar": 12,
        "endLine": 19,
        "endChar": 28
      },
      "revId": "79fd821a6b282e0c818084125963415a96dcd519",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d78d14b5_da6902d0",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationUtil.java",
        "patchSetId": 21
      },
      "lineNbr": 19,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-01-22T21:57:14Z",
      "side": 1,
      "message": "\u003e \u003e Did a bit of digging to find the birth of this method[1].\n\u003e \u003e \n\u003e \u003e Looks like it originated a while ago from an attempt to log node names/ports/protocols unambiguously.\n\u003e \n\u003e Oof, that\u0027s worse than I thought. I don\u0027t even think that was for logging, it looks like it was only for output to the StartCommand (AFAIK that\u0027s the only place CommandProcessing has ever been used). That it got reused later for events was probably a mistake.\n\nYes, I think you\u0027re right.\n\n\u003e \n\u003e Is there a technical reason not to use the complete URIish (or modified to not include the project)? Events aren\u0027t exactly supposed to be consumed by humans. Obviously it would be inconsistent with other replication events if we don\u0027t change them too, but I think it would be worth changing them.\n\nThere are few methods already exposed by URIish (i.e. .getHumanishName(), .format(), etc[1]), but non of them does _exactly_ what resolveName() does, from what I can tell.\n\nIf there is a real need for expressing this specific \"format\" of URIish, which is not covered by any other method, then perhaps resolveName() should be exposed by URIish itself.\n\nWhile I acknowledge we could do with normalizing this method\u0027s usage and definition, I agree refactoring events using a different format is inherently risky and it might break consumers, for what we know, so I should be dealt as a separate task, imho.\n\nI would like to avoid making this CR paying the price for yet another refactoring (I believe we addressed quite few already).\n\nHow about I create an issue related to the resolveName() problem  so that we can address this separately?\n\nhttps://gerrit.googlesource.com/jgit/+/cf9433a9b3c3359fbb4cbdd9c65b99b44eba08e8/org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/URIishTest.java#434",
      "parentUuid": "41486dda_3dac4d23",
      "range": {
        "startLine": 19,
        "startChar": 12,
        "endLine": 19,
        "endChar": 28
      },
      "revId": "79fd821a6b282e0c818084125963415a96dcd519",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba11e660_600f3aa5",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationEventsIT.java",
        "patchSetId": 21
      },
      "lineNbr": 45,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-01-08T17:08:40Z",
      "side": 1,
      "message": "Name this based on the meaning: TEST_DELETE_PROJECT_TIMEOUT",
      "range": {
        "startLine": 45,
        "startChar": 32,
        "endLine": 45,
        "endChar": 44
      },
      "revId": "79fd821a6b282e0c818084125963415a96dcd519",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fbc9927a_13c660e0",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationEventsIT.java",
        "patchSetId": 21
      },
      "lineNbr": 45,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-01-09T17:09:49Z",
      "side": 1,
      "message": "Yep, makes sense",
      "parentUuid": "ba11e660_600f3aa5",
      "range": {
        "startLine": 45,
        "startChar": 32,
        "endLine": 45,
        "endChar": 44
      },
      "revId": "79fd821a6b282e0c818084125963415a96dcd519",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5ad5baf_838641d7",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationEventsIT.java",
        "patchSetId": 21
      },
      "lineNbr": 134,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-01-08T17:08:40Z",
      "side": 1,
      "message": "I don\u0027t think you want this helper even here. For just two calls, you\u0027re probably adding more characters than you\u0027re saving ðŸ˜Š (and more importantly it obfuscates the timeout value).",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 134,
        "endChar": 3
      },
      "revId": "79fd821a6b282e0c818084125963415a96dcd519",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a37010b9_f29ec2ef",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationEventsIT.java",
        "patchSetId": 21
      },
      "lineNbr": 134,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-01-09T17:09:49Z",
      "side": 1,
      "message": "point taken.\nI just wanted to keep some consistency with other tests but I can see both approaches are used.\n\nLet me remove this wrapper.",
      "parentUuid": "a5ad5baf_838641d7",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 134,
        "endChar": 3
      },
      "revId": "79fd821a6b282e0c818084125963415a96dcd519",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}