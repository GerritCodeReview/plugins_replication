{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2c54e548_3dac99de",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-12-17T17:06:27Z",
      "side": 1,
      "message": "Why don\u0027t we exempt InternalUsers from the ref-readability check as it was before the Security fox, instead of fixing this regression in this and other plugins?\n\nBut, looking at: [1], I still see that getUser().isInternalUser() is considered after the security fix was applied:\n\n  if (hasReadPermissionOnRef \u003d\u003d null) {\n      hasReadPermissionOnRef \u003d getUser().isInternalUser() || canPerform(Permission.READ);\n    }\n\nAm I missing something?\n\n[1] https://gerrit-review.googlesource.com/c/gerrit-security-fixes/+/287027/5/java/com/google/gerrit/server/permissions/RefControl.java#128",
      "range": {
        "startLine": 9,
        "startChar": 55,
        "endLine": 10,
        "endChar": 40
      },
      "revId": "f9c32d280720b6f3a4ab6ef266d21058ba9acb67",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64651bac_b74b5b64",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2020-12-18T07:15:52Z",
      "side": 1,
      "message": "My first approach was to short-circuit read-permission check if user is internal [1].\nBut then I thought that why would we check permission when we already now that it\u0027s an internal-user without permission restrictions?\nIt makes no sense to not make the permission-check when the user is an internal user, but we could fix the regression in parallel.\n\nIt doesn\u0027t reach that code, allowNoteDbRefs is false and it\u0027s a gerrit-ref so it returns false in the if-clause above it.\n\n[1] https://gerrit-review.googlesource.com/c/gerrit/+/291686",
      "parentUuid": "2c54e548_3dac99de",
      "range": {
        "startLine": 9,
        "startChar": 55,
        "endLine": 10,
        "endChar": 40
      },
      "revId": "f9c32d280720b6f3a4ab6ef266d21058ba9acb67",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f580ac8b_5c716cb9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-12-18T07:29:48Z",
      "side": 1,
      "message": "Thanks for clarifying. But then this is a evident regression:\n\nOld code:\n\n  if (isVisible \u003d\u003d null) {\n      isVisible \u003d getUser().isInternalUser() || canPerform(Permission.READ);\n  }\n  return isVisible;\n\nNew code:\n\n  // Don\u0027t allow checking for NoteDb refs unless instructed otherwise.\n    if (!allowNoteDbRefs\n        \u0026\u0026 (refName.startsWith(Constants.R_TAGS) || RefNames.isGerritRef(refName))) {\n      logger.atWarning().atMostEvery(30, TimeUnit.SECONDS).log(\n          \"%s: Can\u0027t determine visibility of %s in RefControl. Denying access. \"\n              + \"This case should have been handled before.\",\n          projectControl.getProject().getName(), refName);\n      return false;\n    }\n    if (hasReadPermissionOnRef \u003d\u003d null) {\n      hasReadPermissionOnRef \u003d getUser().isInternalUser() || canPerform(Permission.READ);\n    }\n\nI guess we can reorder the condition as it was before security check in gerrit core and exempt internal user from permission check? It\u0027s already there, but got broken.\n\n@Patrick, @Edwin: any comments?",
      "parentUuid": "64651bac_b74b5b64",
      "range": {
        "startLine": 9,
        "startChar": 55,
        "endLine": 10,
        "endChar": 40
      },
      "revId": "f9c32d280720b6f3a4ab6ef266d21058ba9acb67",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "475bbae0_db05efca",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2020-12-18T08:12:21Z",
      "side": 1,
      "message": "I\u0027ll restore my initial fix.",
      "parentUuid": "f580ac8b_5c716cb9",
      "range": {
        "startLine": 9,
        "startChar": 55,
        "endLine": 10,
        "endChar": 40
      },
      "revId": "f9c32d280720b6f3a4ab6ef266d21058ba9acb67",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30932783_694a0eba",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-12-17T15:34:26Z",
      "side": 1,
      "message": "Since this security fix was made pretty far back, did we break replication for all those older versions too? Should this change get moved to an earlier (EOL) branch?",
      "revId": "f9c32d280720b6f3a4ab6ef266d21058ba9acb67",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7767287a_75107eaa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-12-17T17:06:27Z",
      "side": 1,
      "message": "+1. Security fix was applied starting from 2.15 we would have to perform gerrit releases for 17 release trains.",
      "parentUuid": "30932783_694a0eba",
      "revId": "f9c32d280720b6f3a4ab6ef266d21058ba9acb67",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53f4fa0e_caebfca7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2020-12-18T07:15:52Z",
      "side": 1,
      "message": "Yes, we have reports of this being broken on 2.16.25 but it\u0027s probably broken on 2.15 as well.\nI haven\u0027t had the time to write up a process proposal but in cases such as this it makes little sense to me to fix it on 2.15 and do a series of time-consuming merges back to master. I feel that we should first and foremost fix the active branches so:\n1. Fix on oldest active branch\n2. Merge back up to master\n3. Backport to EOL branches.\nThis would make bug-fixes reach active branches faster and we could skip a handful of time-consuming and error-prone merges from ancient versions.\nWDYT",
      "parentUuid": "7767287a_75107eaa",
      "revId": "f9c32d280720b6f3a4ab6ef266d21058ba9acb67",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18b3a972_09008a16",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationIT.java",
        "patchSetId": 3
      },
      "lineNbr": 184,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-12-17T15:34:26Z",
      "side": 1,
      "message": "This is a great test to add!\n\nI\u0027d be more comfortable with this change if we had at least one test with authGroup so that we\u0027re confident we\u0027re not breaking it. Could you do that in a parent change? If you don\u0027t think you\u0027ll have time, let me know and I\u0027ll see what I can do.",
      "range": {
        "startLine": 184,
        "startChar": 14,
        "endLine": 184,
        "endChar": 36
      },
      "revId": "f9c32d280720b6f3a4ab6ef266d21058ba9acb67",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80d3356b_087ab458",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationIT.java",
        "patchSetId": 3
      },
      "lineNbr": 184,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2020-12-18T07:15:52Z",
      "side": 1,
      "message": "This has no affect when authgroup is set since then the scoped user is a CurrentUser and not an InternalUser.\nThe security-fix (root-cause) affects replication with authgroup since you need to give at least one of the authgroup READ to the db references, most easily done with giving it \"Access Database\". See follow-up change.",
      "parentUuid": "18b3a972_09008a16",
      "range": {
        "startLine": 184,
        "startChar": 14,
        "endLine": 184,
        "endChar": 36
      },
      "revId": "f9c32d280720b6f3a4ab6ef266d21058ba9acb67",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55ae89fd_d9fd38b3",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationIT.java",
        "patchSetId": 3
      },
      "lineNbr": 189,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-12-17T17:06:27Z",
      "side": 1,
      "message": "Thanks for adding this test. May be even add new public key or change something else and verify that the change was replicated?",
      "revId": "f9c32d280720b6f3a4ab6ef266d21058ba9acb67",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "57a3c886_9a5c6f6b",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationIT.java",
        "patchSetId": 3
      },
      "lineNbr": 189,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2020-12-18T07:15:52Z",
      "side": 1,
      "message": "Replication works on a ref-level, if the user-ref is replicated and then all changes to the content of this ref will be replicated.",
      "parentUuid": "55ae89fd_d9fd38b3",
      "revId": "f9c32d280720b6f3a4ab6ef266d21058ba9acb67",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7361da1c_f861d7ee",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationIT.java",
        "patchSetId": 3
      },
      "lineNbr": 193,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-12-17T15:34:26Z",
      "side": 1,
      "message": "I think you can use the isPushCompleted helper (and use the TEST_PUSH_TIMEOUT since that\u0027s the relevant timeout):\n\n  assertThat(isPushCompleted(allUsersMirror, userRef, TEST_PUSH_TIMEOUT)).isEqualTo(true);",
      "range": {
        "startLine": 191,
        "startChar": 4,
        "endLine": 193,
        "endChar": 5
      },
      "revId": "f9c32d280720b6f3a4ab6ef266d21058ba9acb67",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f9951f3_52a20eff",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationIT.java",
        "patchSetId": 3
      },
      "lineNbr": 193,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2020-12-18T07:15:52Z",
      "side": 1,
      "message": "That looks a lot nicer to me, will fix.",
      "parentUuid": "7361da1c_f861d7ee",
      "range": {
        "startLine": 191,
        "startChar": 4,
        "endLine": 193,
        "endChar": 5
      },
      "revId": "f9c32d280720b6f3a4ab6ef266d21058ba9acb67",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4884e6d8_c6013954",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationIT.java",
        "patchSetId": 3
      },
      "lineNbr": 193,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2020-12-18T09:04:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f9951f3_52a20eff",
      "range": {
        "startLine": 191,
        "startChar": 4,
        "endLine": 193,
        "endChar": 5
      },
      "revId": "f9c32d280720b6f3a4ab6ef266d21058ba9acb67",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}