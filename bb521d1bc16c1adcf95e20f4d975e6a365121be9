{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9a85c306_e550c592",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2020-11-10T16:27:04Z",
      "side": 1,
      "message": "Btw: can anyone point me to the problem that zuul complains about? Details (Checks tab) look weird to me as I can\u0027t find the log...",
      "revId": "bb521d1bc16c1adcf95e20f4d975e6a365121be9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92c2c523_b516f3f2",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/SwapAdminApiReplicationIT.java",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-11-12T00:44:56Z",
      "side": 1,
      "message": "Do we really care about testing again that the replication plugin works? The goal of the test is the assertion L78, correct?",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 77,
        "endChar": 5
      },
      "revId": "bb521d1bc16c1adcf95e20f4d975e6a365121be9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "110a1028_7766b054",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/SwapAdminApiReplicationIT.java",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2020-11-12T08:50:49Z",
      "side": 1,
      "message": "That is correct. I look forward to hearing from Nasser. I believe that we have 2 options:\n1. treat it as a sole verification of the change that it depends on and then your suggestion makes perfect sense\n2. treat it as an example of how our integration works and then I will extend even more classes and add more test cases that cover the other classes swap.\n\nWhat do you guys think?\n\nbtw: Luca can you tell me why it fails with verification? I\u0027m probably missing sth obvious but I can\u0027t access any logs related to it...",
      "parentUuid": "92c2c523_b516f3f2",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 77,
        "endChar": 5
      },
      "revId": "bb521d1bc16c1adcf95e20f4d975e6a365121be9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c56ef7c_2bdf9e80",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/SwapAdminApiReplicationIT.java",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-11-12T12:34:14Z",
      "side": 1,
      "message": "\u003e That is correct. I look forward to hearing from Nasser. I believe that we have 2 options:\n\u003e 1. treat it as a sole verification of the change that it depends on and then your suggestion makes perfect sense\n\n+1\n\n\u003e 2. treat it as an example of how our integration works and then I will extend even more classes and add more test cases that cover the other classes swap.\n\nWe can of course duplicate tests, but they always risk to get out of sync and forgotten ... then becoming tech debt.\n\n\u003e btw: Luca can you tell me why it fails with verification? I\u0027m probably missing sth obvious but I can\u0027t access any logs related to it...\n\nIt isn\u0027t obvious at all and, unfortunately, I can\u0027t get much from the error shown by Zuul :-(\n\nAt the moment, we\u0027re pretty much stuck with the CI notifications / validations, until the Zuul functionality is restored.",
      "parentUuid": "110a1028_7766b054",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 77,
        "endChar": 5
      },
      "revId": "bb521d1bc16c1adcf95e20f4d975e6a365121be9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7442dd78_111ab207",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/SwapAdminApiReplicationIT.java",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-11-12T15:23:54Z",
      "side": 1,
      "message": "\u003e \u003e That is correct. I look forward to hearing from Nasser. I believe that we have 2 options:\n\nI just replied on the parent change. I\u0027m still trying to understand the usage enough to weigh in on the options below. In general I\u0027d prefer to not duplicate tests, but I\u0027m not sure enough about this scenario to say what\u0027s correct here.\n\n\u003e \u003e 1. treat it as a sole verification of the change that it depends on and then your suggestion makes perfect sense\n\u003e \n\u003e +1\n\u003e \n\u003e \u003e 2. treat it as an example of how our integration works and then I will extend even more classes and add more test cases that cover the other classes swap.\n\u003e \n\u003e We can of course duplicate tests, but they always risk to get out of sync and forgotten ... then becoming tech debt.\n\u003e \n\u003e \u003e btw: Luca can you tell me why it fails with verification? I\u0027m probably missing sth obvious but I can\u0027t access any logs related to it...\n\u003e \n\u003e It isn\u0027t obvious at all and, unfortunately, I can\u0027t get much from the error shown by Zuul :-(\n\u003e \n\u003e At the moment, we\u0027re pretty much stuck with the CI notifications / validations, until the Zuul functionality is restored.\n\nZuul guru James Blair just said he\u0027d take a look at the issue, so hopefully it\u0027s fixed soon. See https://groups.google.com/d/msgid/repo-discuss/1a99a552-2274-4611-a20d-5f268bdc5418n%40googlegroups.com?utm_medium\u003demail\u0026utm_source\u003dfooter for some more details on the issue.",
      "parentUuid": "7c56ef7c_2bdf9e80",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 77,
        "endChar": 5
      },
      "revId": "bb521d1bc16c1adcf95e20f4d975e6a365121be9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "expression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "status": "FAIL",
        "errorMessage": {},
        "passingAtoms": [],
        "failingAtoms": [
          "label:Code-Review\u003dMAX,user\u003dnon_uploader",
          "label:Code-Review\u003dMIN"
        ]
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "bb521d1bc16c1adcf95e20f4d975e6a365121be9",
      "legacy": {
        "value": false
      },
      "forced": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {
          "expression": {
            "expressionString": "-branch:refs/meta/config"
          },
          "status": "PASS",
          "errorMessage": {},
          "passingAtoms": [],
          "failingAtoms": [
            "branch:refs/meta/config"
          ]
        }
      },
      "submittabilityExpressionResult": {
        "expression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "status": "PASS",
        "errorMessage": {},
        "passingAtoms": [
          "label:Verified\u003dMAX"
        ],
        "failingAtoms": [
          "label:Verified\u003dMIN"
        ]
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "bb521d1bc16c1adcf95e20f4d975e6a365121be9",
      "legacy": {
        "value": false
      },
      "forced": {}
    }
  ]
}