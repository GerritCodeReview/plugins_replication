{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3d47ab28_65701195",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 13,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-03-02T00:34:32Z",
      "side": 1,
      "message": "Why is this needed? If the security policies impose the use of an encrypted storage, the use of the plaintext password on the remote is a security threat.",
      "range": {
        "startLine": 11,
        "startChar": 37,
        "endLine": 13,
        "endChar": 26
      },
      "revId": "226fbf46293c399423b20f5fc24fe7ef36c2fa6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99f31f6b_3b0a8b4e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 13,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-03-02T08:59:10Z",
      "side": 1,
      "message": "the `replication` plugin was accessing `secure.config` directly, without any encryption, which means that existing installations will have secrets stored there in plain text, even if the encrypted secure store was enabled. Without that fallback mechanism, we\u0027d need a migration step that will encrypt everything in `secure.config`.",
      "parentUuid": "3d47ab28_65701195",
      "range": {
        "startLine": 11,
        "startChar": 37,
        "endLine": 13,
        "endChar": 26
      },
      "revId": "226fbf46293c399423b20f5fc24fe7ef36c2fa6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffd19efd_6149f921",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 13,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-03-02T11:24:51Z",
      "side": 1,
      "message": "\u003e the `replication` plugin was accessing `secure.config` directly, without any encryption, which means that existing installations will have secrets stored there in plain text, even if the encrypted secure store was enabled.\n\nNo, Gerrit will encrypt them either during the init phase, using the passwd program or the switch-secure-store utility.\n\n\u003e Without that fallback mechanism, we\u0027d need a migration step that will encrypt everything in `secure.config`.\n\nHave you tried switch-secure-store site program? It was written by a passionate ðŸ˜Ž Gerrit contributor 10 years ago https://gerrit-review.googlesource.com/c/gerrit/+/65104.\n\nIt works as expected.",
      "parentUuid": "99f31f6b_3b0a8b4e",
      "range": {
        "startLine": 11,
        "startChar": 37,
        "endLine": 13,
        "endChar": 26
      },
      "revId": "226fbf46293c399423b20f5fc24fe7ef36c2fa6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "124933dc_6ae0e287",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 13,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-03-04T09:43:58Z",
      "side": 1,
      "message": "\u003e No, Gerrit will encrypt them either during the init phase, using the passwd program or the switch-secure-store utility.\n\nReally? How then, does the replication plugin handle the encrypted value? From what I can tell from the code it won\u0027t as it reads the `secure.config` as it\u0027s a plain text file:\n\n```java\n    FileBasedConfig cfg \u003d new FileBasedConfig(site.secure_config.toFile(), FS.DETECTED);\n    if (cfg.getFile().exists() \u0026\u0026 cfg.getFile().length() \u003e 0) {\n      try {\n        cfg.load();\n```\n\nThe above is a snipped from the old `SecureCredentialsFactory` that now will use the SecureStore.\n\nMy point here is that to make the replication work, the password for the remote must be put into `secure.config` in plain text, otherwise when it\u0027s encrypted, `replication` will use that value as as a password without attempting to decrypt it.\n\nWhen we change that behaviour, we either:\n1. need to document the migration step (aka usage of `switch-secure-store` or,\n2. fallback to reading the password as plain text\n\nIf we go with #1, since 3.10, it won\u0027t be possible to drop a new `replication.jar` into `plugins/` as the passwords need to be encrypted.\n\nWith #2 we keep the same upgrade procedure, but still can support fully encrypted `secure.config`.\n\n\u003e Have you tried switch-secure-store site program?\n\nIt was a long time ago, and AFAIR was implemented during one of the hackathons at Google ;) \n\nBut this won\u0027t _magically_ migrate the `secure.config` as it must be manually executed by the Gerrit admin.",
      "parentUuid": "ffd19efd_6149f921",
      "range": {
        "startLine": 11,
        "startChar": 37,
        "endLine": 13,
        "endChar": 26
      },
      "revId": "226fbf46293c399423b20f5fc24fe7ef36c2fa6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47d927b5_77db62e4",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/RemoteConfiguration.java",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-03-02T00:34:32Z",
      "side": 1,
      "message": "Nit: unrelated formatting changes across the file.",
      "revId": "226fbf46293c399423b20f5fc24fe7ef36c2fa6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cdb30fb1_b2a341ac",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/RemoteConfiguration.java",
        "patchSetId": 8
      },
      "lineNbr": 139,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-03-02T00:34:32Z",
      "side": 1,
      "message": "Why do we need this? Can you elaborate?",
      "range": {
        "startLine": 123,
        "startChar": 0,
        "endLine": 139,
        "endChar": 0
      },
      "revId": "226fbf46293c399423b20f5fc24fe7ef36c2fa6c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}