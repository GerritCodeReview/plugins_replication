{
  "comments": [
    {
      "key": {
        "uuid": "285d445f_de3a1693",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2020-03-17T14:39:42Z",
      "side": 1,
      "message": "Rewrite as: Move replication config parsing out of DestinationsCollection\n\nOn the first read I understood the current subject as if there will\nbe two parsers: destinations parser and config parser",
      "revId": "d0764c3496398c0b189bc6fcd5595cbeeb78c376",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae1d8273_bcf0ef70",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-03-17T20:08:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "285d445f_de3a1693",
      "revId": "d0764c3496398c0b189bc6fcd5595cbeeb78c376",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8cc23d87_90bce750",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationConfigParser.java",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2020-03-17T14:39:42Z",
      "side": 1,
      "message": "2020",
      "range": {
        "startLine": 1,
        "startChar": 17,
        "endLine": 1,
        "endChar": 21
      },
      "revId": "d0764c3496398c0b189bc6fcd5595cbeeb78c376",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45adb82d_02561d68",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationConfigParser.java",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-03-18T13:03:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8cc23d87_90bce750",
      "range": {
        "startLine": 1,
        "startChar": 17,
        "endLine": 1,
        "endChar": 21
      },
      "revId": "d0764c3496398c0b189bc6fcd5595cbeeb78c376",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "511908e9_f7fcc5f5",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationConfigParser.java",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2020-03-17T14:39:42Z",
      "side": 1,
      "message": "This should rather be named: ConfigParser\n\nsee below...",
      "revId": "d0764c3496398c0b189bc6fcd5595cbeeb78c376",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "845f1c33_67026a7d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationConfigParser.java",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-03-18T13:03:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "511908e9_f7fcc5f5",
      "revId": "d0764c3496398c0b189bc6fcd5595cbeeb78c376",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be0567b6_30905296",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationConfigParser.java",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2020-03-17T14:39:42Z",
      "side": 1,
      "message": "All usages of this parameter start with replicationConfig.getConfig() which means\nthat this method actually needs only a Config object. Let\u0027s make that explicit.",
      "range": {
        "startLine": 42,
        "startChar": 34,
        "endLine": 42,
        "endChar": 78
      },
      "revId": "d0764c3496398c0b189bc6fcd5595cbeeb78c376",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f79bad18_b9e91789",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationConfigParser.java",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2020-03-17T14:39:42Z",
      "side": 1,
      "message": "static?\n\nThere are no instance members in this class",
      "revId": "d0764c3496398c0b189bc6fcd5595cbeeb78c376",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b99e29f6_6ebc20cf",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationConfigParser.java",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-03-17T20:08:23Z",
      "side": 1,
      "message": "Unfortunately ReplicationFileBasedConfig.getConfig is returning FileBasedConfig instead of Config. We relay on FileBasedConfig implementation in few places for example in line 57. I believe code which is loading the configuration and checking underlying files is out of scope of this method but this is how it was design. This functionality is moved to ReplicationConfigProvider is following change and there we can change to Config here we can use FileBasedConfig",
      "parentUuid": "be0567b6_30905296",
      "range": {
        "startLine": 42,
        "startChar": 34,
        "endLine": 42,
        "endChar": 78
      },
      "revId": "d0764c3496398c0b189bc6fcd5595cbeeb78c376",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "547feab3_644dd068",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationConfigParser.java",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-03-17T20:08:23Z",
      "side": 1,
      "message": "In general we should try to avoid using static methods they are making writing tests more complicated because static methods cannot be easily mocked or stubbed. I agree instance without members is a code smell maybe we should move parse functionality to ReplicationConfig in following change?",
      "parentUuid": "f79bad18_b9e91789",
      "revId": "d0764c3496398c0b189bc6fcd5595cbeeb78c376",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "060a0e50_85ddaaeb",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationConfigParser.java",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2020-03-18T15:42:10Z",
      "side": 1,
      "message": "\u003e Unfortunately ReplicationFileBasedConfig.getConfig is returning FileBasedConfig instead of Config.\n\nFileBasedConfig is a subtype of Config?! Therefore passing a FileBasedConfig where Config\nis expected is allowed.\n\n\u003e We relay on FileBasedConfig implementation in few places for example in line 57.\nIf we expect Config object then it is responsibility of the caller to ensure that\na passed FileBasedConfig is loaded.",
      "parentUuid": "b99e29f6_6ebc20cf",
      "range": {
        "startLine": 42,
        "startChar": 34,
        "endLine": 42,
        "endChar": 78
      },
      "revId": "d0764c3496398c0b189bc6fcd5595cbeeb78c376",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d21b9e4_38610d5f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationConfigParser.java",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-03-18T16:34:26Z",
      "side": 1,
      "message": "\u003e If we expect Config object then it is responsibility of the caller to ensure that\n\u003e a passed FileBasedConfig is loaded.\nI agree that\u0027s why originally this change was a part of following change. In following change config is loaded in ReplicationFileBasedConfigProvider. In this change there is no good place to load the config. I was thinking about constructor of ReplicationFileBasedConfig but I believe there was a good reason why it wasn\u0027t done like that in first place.",
      "parentUuid": "060a0e50_85ddaaeb",
      "range": {
        "startLine": 42,
        "startChar": 34,
        "endLine": 42,
        "endChar": 78
      },
      "revId": "d0764c3496398c0b189bc6fcd5595cbeeb78c376",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "adc8c4ef_f2505936",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationConfigParser.java",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-03-23T11:29:52Z",
      "side": 1,
      "message": "As I mentioned this is fixed in following change if we cannot merge this one in that shape another solution is to add topic to both changes and merge them together",
      "parentUuid": "1d21b9e4_38610d5f",
      "range": {
        "startLine": 42,
        "startChar": 34,
        "endLine": 42,
        "endChar": 78
      },
      "revId": "d0764c3496398c0b189bc6fcd5595cbeeb78c376",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4cefda81_a0ea9f0e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationConfigParser.java",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2020-03-23T12:38:24Z",
      "side": 1,
      "message": "This change [1] fixes the loading of FileBasedConfig in the ReplicationFileBasedConfig.\nIf we submit [1] and rebased your changes on [1] then we don\u0027t need to pass FileBasedConfig\nhere and care about loading it here. And the validation for an empty config can be\ndone here in the way like you did in the follow-up change.\n\n\n[1] https://gerrit-review.googlesource.com/c/plugins/replication/+/257432",
      "parentUuid": "adc8c4ef_f2505936",
      "range": {
        "startLine": 42,
        "startChar": 34,
        "endLine": 42,
        "endChar": 78
      },
      "revId": "d0764c3496398c0b189bc6fcd5595cbeeb78c376",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3950369_2efd1c6f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationConfigParser.java",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2020-03-17T14:39:42Z",
      "side": 1,
      "message": "This can also be just Config\n\nThe cfg.getFile() can be replaced with cfg.toString()",
      "range": {
        "startLine": 114,
        "startChar": 47,
        "endLine": 114,
        "endChar": 62
      },
      "revId": "d0764c3496398c0b189bc6fcd5595cbeeb78c376",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef2525ae_98a52cb8",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationConfigParser.java",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-03-17T20:08:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f3950369_2efd1c6f",
      "range": {
        "startLine": 114,
        "startChar": 47,
        "endLine": 114,
        "endChar": 62
      },
      "revId": "d0764c3496398c0b189bc6fcd5595cbeeb78c376",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}