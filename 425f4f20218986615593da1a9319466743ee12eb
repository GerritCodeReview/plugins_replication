{
  "comments": [
    {
      "key": {
        "uuid": "cfb6cbf8_cd5fc5b2",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/PushOne.java",
        "patchSetId": 5
      },
      "lineNbr": 315,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2020-05-04T11:33:01Z",
      "side": 1,
      "message": "MDC is from slf4j; we probably need to find the equivalent of this for flogger",
      "range": {
        "startLine": 315,
        "startChar": 4,
        "endLine": 315,
        "endChar": 12
      },
      "revId": "425f4f20218986615593da1a9319466743ee12eb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d7a73e0_e567430c",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/PushOne.java",
        "patchSetId": 5
      },
      "lineNbr": 315,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-05-04T11:37:22Z",
      "side": 1,
      "message": "MDC doesn\u0027t seem to be supported in Flogger. I just found this comment in the Flogger source code:\n\n  // The Mapped Diagnostic Context (MDC) allows to include additional metadata into logs which\n  // are written from the current thread.\n  //\n  // Example:\n  //  MDC.put(\"user.id\", userId);\n  //  // do business logic that triggers logs\n  //  MDC.clear();\n  //\n  // By using \u0027%X{key}\u0027 in the ConversionPattern of an appender this data can be included in the\n  // logs.\n  //\n  // We could include this data here by doing \u0027MDC.getContext()\u0027, but we don\u0027t want to encourage\n  // people using the log4j specific MDC. Instead this should be supported by a LoggingContext and\n  // usage of Flogger tags.\n\n[1] https://github.com/google/flogger/blob/master/log4j/src/main/java/com/google/common/flogger/backend/log4j/SimpleLogEvent.java#L109-L125",
      "parentUuid": "cfb6cbf8_cd5fc5b2",
      "range": {
        "startLine": 315,
        "startChar": 4,
        "endLine": 315,
        "endChar": 12
      },
      "revId": "425f4f20218986615593da1a9319466743ee12eb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4778bf52_d0d3d020",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/PushOne.java",
        "patchSetId": 5
      },
      "lineNbr": 315,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2020-05-04T12:13:48Z",
      "side": 1,
      "message": "How shall we proceed? Clean revert of this change is not possible, there are conflicts\non some files. After resolving the conflicts, build fails. There are follow-up change\nof this one which depend on flogger. Mainly these are changes from DavidP where logging\nis improved to provide more info.",
      "parentUuid": "9d7a73e0_e567430c",
      "range": {
        "startLine": 315,
        "startChar": 4,
        "endLine": 315,
        "endChar": 12
      },
      "revId": "425f4f20218986615593da1a9319466743ee12eb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2be4d4ae_5829eb74",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/PushOne.java",
        "patchSetId": 5
      },
      "lineNbr": 315,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-05-04T12:33:56Z",
      "side": 1,
      "message": "\u003e How shall we proceed? \n\nIt depends on whether or not it\u0027s curently doable to pass parameter to Flogger?\n\nIf yes, then a fix should be straight forward.\n\nIf not, then we probably would have to extend Flogger, and wait for a new release.\n\nIn the latter case we would have to rollack the whole series.",
      "parentUuid": "4778bf52_d0d3d020",
      "range": {
        "startLine": 315,
        "startChar": 4,
        "endLine": 315,
        "endChar": 12
      },
      "revId": "425f4f20218986615593da1a9319466743ee12eb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}