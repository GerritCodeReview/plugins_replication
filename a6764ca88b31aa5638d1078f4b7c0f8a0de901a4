{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ba8e9800_49e7ec99",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2023-12-11T09:58:40Z",
      "side": 1,
      "message": "OK, I start to see how ConfigResource can make sense :-)",
      "revId": "a6764ca88b31aa5638d1078f4b7c0f8a0de901a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77587448_f2c1511c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-12-11T13:22:54Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "ba8e9800_49e7ec99",
      "revId": "a6764ca88b31aa5638d1078f4b7c0f8a0de901a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03be3ab1_7f60d468",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2023-12-11T13:25:25Z",
      "side": 1,
      "message": "Actually I am still not convinced that ConfigResource based design is the better approach. For example we may have data in ZooKeeper which describes a Gerrit cluster. This data may not contain replication.config but we can implement ReplicationConfig without the need to generate replication.config.",
      "parentUuid": "ba8e9800_49e7ec99",
      "revId": "a6764ca88b31aa5638d1078f4b7c0f8a0de901a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25b89cf7_2d14a99f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-12-11T14:03:45Z",
      "side": 1,
      "message": "The `ReplicationConfig` makes more sense when multiple different formats (eg `xml`, `yaml`and `ini`) are supported and each would use different keys for the configuration properties. Sure, the ZooKeeper falls into this scenario, but hear me out ;)\n\nTo get the replication destination, `ReplicationConfig` is already forcing you to build the JGit `Config` object. As all of the Gerrit configuration files use JGit `Config` I\u0027ve decided this would be the lowest common denominator for all replication configuration-related options.\n\nThe added benefit is that we can reduce code duplication between the regular file-based configuration and \"fanout\".\n\n\nWith the `ConfigReesource` you can implement `ZooKeeperConfigResource` that would get all of the configuration options from ZooKeeper, build a `Config` object in memory and return that to `ReplicationConfig`.\n\n\u003e This data may not contain replication.config but we can implement ReplicationConfig without the need to generate replication.config.\n\nThis actually, has nothing to do with the `ConfigResource`, but it\u0027s a feature of `MergedConfigResource`. This is where we assume that `replication.config` still exists on the file system and will use it as a base configuration. On the one side, this adds a bit of complexity (as there are potentially two places where the configuration option could be set). On the other, it makes things backwards compatible and doesn\u0027t require any upgrade steps.\n\nWe can potentially drop that feature, but then we need to figure out upgrade steps and how to move existing `$gerrit_site/etc/replication.config` to a git repository and inform all of the users to use the git version instead.",
      "parentUuid": "03be3ab1_7f60d468",
      "revId": "a6764ca88b31aa5638d1078f4b7c0f8a0de901a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b7abcf8_f6658de1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2023-12-11T14:26:15Z",
      "side": 1,
      "message": "\u003e To get the replication destination, ReplicationConfig is already forcing you to build the JGit Config object\n\nYes, and with that I agree that the `Config` can be used as the lowest common denominator.",
      "parentUuid": "25b89cf7_2d14a99f",
      "revId": "a6764ca88b31aa5638d1078f4b7c0f8a0de901a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbe6d21e_816aa964",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-12-11T14:38:17Z",
      "side": 1,
      "message": "What\u0027s the outcome here? Do you agree that `ConfigResource` abstraction would be enough to implement the ZooKeeper-based config resource?",
      "parentUuid": "4b7abcf8_f6658de1",
      "revId": "a6764ca88b31aa5638d1078f4b7c0f8a0de901a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47cd3977_6925bbb4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2023-12-11T14:46:29Z",
      "side": 1,
      "message": "Since we are anyway forced to provide a Config from the ReplicationConfig, I agree that the ConfigResource abstraction is OK.",
      "parentUuid": "dbe6d21e_816aa964",
      "revId": "a6764ca88b31aa5638d1078f4b7c0f8a0de901a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5161ca84_ab248ed1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-12-11T17:51:04Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "47cd3977_6925bbb4",
      "revId": "a6764ca88b31aa5638d1078f4b7c0f8a0de901a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ca568b6_55ddc805",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2023-12-11T11:55:29Z",
      "side": 1,
      "message": "built",
      "range": {
        "startLine": 17,
        "startChar": 34,
        "endLine": 17,
        "endChar": 39
      },
      "revId": "a6764ca88b31aa5638d1078f4b7c0f8a0de901a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f95a5e27_7c10ecd2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-12-11T17:51:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ca568b6_55ddc805",
      "range": {
        "startLine": 17,
        "startChar": 34,
        "endLine": 17,
        "endChar": 39
      },
      "revId": "a6764ca88b31aa5638d1078f4b7c0f8a0de901a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da8e9f1d_da9721c1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2023-12-11T09:58:40Z",
      "side": 1,
      "message": "ConfigResource",
      "range": {
        "startLine": 20,
        "startChar": 32,
        "endLine": 20,
        "endChar": 45
      },
      "revId": "a6764ca88b31aa5638d1078f4b7c0f8a0de901a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0388ac54_186445c3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-12-11T17:51:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da8e9f1d_da9721c1",
      "range": {
        "startLine": 20,
        "startChar": 32,
        "endLine": 20,
        "endChar": 45
      },
      "revId": "a6764ca88b31aa5638d1078f4b7c0f8a0de901a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6ec47cb_e5fedcb1",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/AutoReloadRunnable.java",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2023-12-11T12:24:46Z",
      "side": 1,
      "message": "Doesn\u0027t this make the AutoReload* feature bound to only file based config? In my understanding, AutoReload* was orthogonal to the implementations of the ReplicationConfig i.e. it could be used with any ReplicationConfig implementation.",
      "revId": "a6764ca88b31aa5638d1078f4b7c0f8a0de901a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eee8c465_8b45848e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/AutoReloadRunnable.java",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-12-11T13:22:54Z",
      "side": 1,
      "message": "\u003e Doesn\u0027t this make the AutoReload* feature bound to only file based config? \n\nThe `RepilcationFileBasedConfig` uses `Provider\u003cConfigResource\u003e` to read the configuration file in _dirrefernt_ ways. This makes the auto-reload feature work the same way it used to do and will work for the file-based, \"fanout\" and git based configurations.\n\nProbably, we could simplify this even more by removing the `ReplicationConfig` interface and renaming `ReplicationFileBasedConfig` to just `ReplicationConfig`.\n\nDoes this makes sense?",
      "parentUuid": "b6ec47cb_e5fedcb1",
      "revId": "a6764ca88b31aa5638d1078f4b7c0f8a0de901a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c912dc02_8af1d07f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/AutoReloadRunnable.java",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2023-12-11T13:27:00Z",
      "side": 1,
      "message": "In that case the `ReplicationFileBasedConfig` shall be named `ConfigResourceBasedReplicationConfig`",
      "parentUuid": "eee8c465_8b45848e",
      "revId": "a6764ca88b31aa5638d1078f4b7c0f8a0de901a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85c22280_0c7ec17c",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/AutoReloadRunnable.java",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2023-12-11T13:31:08Z",
      "side": 1,
      "message": "\u003e This makes the auto-reload feature work the same way it used to do and will work for the file-based, \"fanout\" and git based configurations\n\nYou also wrote that the `@MainReplicationConfig` can be eliminated? But the auto-reload actually wraps the `@MainReplicationConfig`",
      "parentUuid": "c912dc02_8af1d07f",
      "revId": "a6764ca88b31aa5638d1078f4b7c0f8a0de901a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e06f18a_b9301604",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/AutoReloadRunnable.java",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-12-11T14:03:45Z",
      "side": 1,
      "message": "\u003e You also wrote that the @MainReplicationConfig can be eliminated? But the auto-reload actually wraps the @MainReplicationConfig\n\nWhat do you mean? This commit is removing `@MainReplicationConfig` so it cannot be wrapped anywhere. Right now we only have a single `ReplicationConfig`.",
      "parentUuid": "85c22280_0c7ec17c",
      "revId": "a6764ca88b31aa5638d1078f4b7c0f8a0de901a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ff7e589_cca73763",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/AutoReloadRunnable.java",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2023-12-11T14:26:15Z",
      "side": 1,
      "message": "I see that the `@MainReplicationConfig` gets removed with this commit and I am commenting on that decision. The `AutoReloadConfigDecorator` now wraps `ReplicationFileBasedConfig` instead of the `@MainReplicationConfig ReplicationConfig`. It is still the same, just using different names.\n\nDepending on the `autoReload` parameter the `ReplicationConfig` interface is bound to `AutoReloadConfigDecorator` or to the `ReplicationFileBasedConfig`, right? So we cannot eliminate the `ReplicationConfig` interface (as proposed in your previous comment)?",
      "parentUuid": "2e06f18a_b9301604",
      "revId": "a6764ca88b31aa5638d1078f4b7c0f8a0de901a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "024fece8_21e0ac58",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/AutoReloadRunnable.java",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-12-11T14:38:17Z",
      "side": 1,
      "message": "Yes, you\u0027re right, we cannot remove `ReplicationConfig` interface. Shall we then rename `ReplicationFileBasedConfig` to `ConfigResourceBasedReplicationConfig` (as you already suggested above), and mark this as resolved?",
      "parentUuid": "2ff7e589_cca73763",
      "revId": "a6764ca88b31aa5638d1078f4b7c0f8a0de901a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97dd66a9_0ba18990",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/AutoReloadRunnable.java",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2023-12-11T14:46:29Z",
      "side": 1,
      "message": "Yes",
      "parentUuid": "024fece8_21e0ac58",
      "revId": "a6764ca88b31aa5638d1078f4b7c0f8a0de901a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ffce6fee_529de2b2",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/AutoReloadRunnable.java",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-12-11T17:51:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "97dd66a9_0ba18990",
      "revId": "a6764ca88b31aa5638d1078f4b7c0f8a0de901a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}