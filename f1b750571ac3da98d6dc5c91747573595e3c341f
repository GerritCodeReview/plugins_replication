{
  "comments": [
    {
      "key": {
        "uuid": "855f489a_5a7f1603",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/AutoReloadConfigDecorator.java",
        "patchSetId": 10
      },
      "lineNbr": 118,
      "author": {
        "id": 1065251
      },
      "writtenOn": "2019-06-18T16:42:41Z",
      "side": 1,
      "message": "This parameter is not used in this change",
      "range": {
        "startLine": 118,
        "startChar": 23,
        "endLine": 118,
        "endChar": 59
      },
      "revId": "f1b750571ac3da98d6dc5c91747573595e3c341f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a14c477f_bfec400a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/AutoReloadConfigDecorator.java",
        "patchSetId": 10
      },
      "lineNbr": 118,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-07-05T21:40:06Z",
      "side": 1,
      "message": "True, but actually it was explicitly requested by Sa≈°a during the review process. Because @Tony\u0027s change address *that* comment using the Guava EventBus, I believe we could, for this change, get rid of the oldConfig parameter.",
      "parentUuid": "855f489a_5a7f1603",
      "range": {
        "startLine": 118,
        "startChar": 23,
        "endLine": 118,
        "endChar": 59
      },
      "revId": "f1b750571ac3da98d6dc5c91747573595e3c341f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "969bf8bd_ba95ca5d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/AutoReloadConfigDecorator.java",
        "patchSetId": 10
      },
      "lineNbr": 118,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-07-05T21:48:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a14c477f_bfec400a",
      "range": {
        "startLine": 118,
        "startChar": 23,
        "endLine": 118,
        "endChar": 59
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "f1b750571ac3da98d6dc5c91747573595e3c341f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be7289de_659c0d5e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/AutoReloadConfigDecorator.java",
        "patchSetId": 10
      },
      "lineNbr": 123,
      "author": {
        "id": 1065251
      },
      "writtenOn": "2019-06-18T16:42:41Z",
      "side": 1,
      "message": "The name of this method _getAll_ is a bit confusing because it\u0027s the \u0027FilterType\u0027 that defines whether it returns *All* destinations or anything else.",
      "range": {
        "startLine": 123,
        "startChar": 63,
        "endLine": 123,
        "endChar": 85
      },
      "revId": "f1b750571ac3da98d6dc5c91747573595e3c341f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "291194c6_557c20d2",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/AutoReloadConfigDecorator.java",
        "patchSetId": 10
      },
      "lineNbr": 123,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-07-05T21:40:06Z",
      "side": 1,
      "message": "the \u0027getAll\u0027 method existed already and isn\u0027t part of the scope of this change.\nI agree that the method name isn\u0027t super-readable, however, we should not \"fix all the problems we see\" in a single change, otherwise, it would become too big and risky IMHO.",
      "parentUuid": "be7289de_659c0d5e",
      "range": {
        "startLine": 123,
        "startChar": 63,
        "endLine": 123,
        "endChar": 85
      },
      "revId": "f1b750571ac3da98d6dc5c91747573595e3c341f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ef83788_43c170b0",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/AutoReloadRunnable.java",
        "patchSetId": 10
      },
      "lineNbr": 62,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-06-13T13:11:27Z",
      "side": 1,
      "message": "I think we have a race condition here and in general we have a race condition with\nthe versioning (getVersion) of the replication.config. The replication.config file may\nget changed (by someone updating it in the file system) just between 61 and 62.\nIn that case we would set the loadedConfigVersion to the new version but in the loadedConfig\nwe would have the old version.\n\nIn general, the content of the replication.config is not read at the moment when the ReplicationFileBasedConfig instance is created. Instead, the caller has to perform:\n\n  loadedConfig.getConfig().load()\n\nto trigger the loading of the content. In the code how it looks now this will happen\nin the onReload method... but we can consider this to just be a lucky accident here.\n\nUnless we can atomically load the content and set the loaded version, we will likely run into\nsporadic issues where the new configuration is not (re)loaded.",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 62,
        "endChar": 53
      },
      "revId": "f1b750571ac3da98d6dc5c91747573595e3c341f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40cc23b2_abace4a3",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/AutoReloadRunnable.java",
        "patchSetId": 10
      },
      "lineNbr": 62,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-06-13T18:43:39Z",
      "side": 1,
      "message": "\u003e I think we have a race condition here and in general we have a race condition with\n\u003e the versioning (getVersion) of the replication.config. The replication.config file may\n\u003e get changed (by someone updating it in the file system) just between 61 and 62.\n\u003e In that case we would set the loadedConfigVersion to the new version but in the loadedConfig\n\u003e we would have the old version.\n\nTrue, that is an existing issue also in the current code:\nhttps://gerrit.googlesource.com/plugins/replication/+/refs/heads/master/src/main/java/com/googlesource/gerrit/plugins/replication/AutoReloadConfigDecorator.java#103\n\nCan you raise an issue so that we can address it separately?\n\n\u003e In general, the content of the replication.config is not read at the moment when the ReplicationFileBasedConfig instance is created. Instead, the caller has to perform:\n\u003e \n\u003e   loadedConfig.getConfig().load()\n\nGood catch, let me fix that in the next PS.\n\n\u003e to trigger the loading of the content. In the code how it looks now this will happen\n\u003e in the onReload method... but we can consider this to just be a lucky accident here.\n\u003e \n\u003e Unless we can atomically load the content and set the loaded version, we will likely run into\n\u003e sporadic issues where the new configuration is not (re)loaded.\n\nYes, true, exactly as it happens today. Did you have that issue in production or in a test environment?",
      "parentUuid": "9ef83788_43c170b0",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 62,
        "endChar": 53
      },
      "revId": "f1b750571ac3da98d6dc5c91747573595e3c341f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0002ec16_1349609a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/AutoReloadRunnable.java",
        "patchSetId": 10
      },
      "lineNbr": 62,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-06-13T18:51:24Z",
      "side": 1,
      "message": "\u003e \u003e In general, the content of the replication.config is not read at the moment when the ReplicationFileBasedConfig instance is created. Instead, the caller has to perform:\n\u003e \u003e \n\u003e \u003e   loadedConfig.getConfig().load()\n\u003e \n\u003e Good catch, let me fix that in the next PS.\n\nI am confused, the ReplicationFileBasedConfig() calls allDestinations() that calls config.load(): am I missing anything?",
      "parentUuid": "40cc23b2_abace4a3",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 62,
        "endChar": 53
      },
      "revId": "f1b750571ac3da98d6dc5c91747573595e3c341f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9655f727_d4de5078",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/AutoReloadRunnable.java",
        "patchSetId": 10
      },
      "lineNbr": 62,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-06-14T09:25:33Z",
      "side": 1,
      "message": "Oh yes this is true but only until you look at the follow-up change which removes\nthat call from the constructor ;-)\nA part of the confusion is that I obviously looked from the tip of the your change series.\n\nIn general the issue of replication.config versioning remains... it shouldn\u0027t depend\non an implicit assumption or even pure luck that the allDestinations() gets called from\nthe ReplicationFileBasedConfig constructor.\n\n\n\u003e True, that is an existing issue also in the current code:\n\u003e https://gerrit.googlesource.com/plugins/replication/+/refs/heads/master/src/main/java/com/googlesource/gerrit/plugins/replication/AutoReloadConfigDecorator.java#103\n\nThis issue actually exists since [1]\n\n\u003e Can you raise an issue so that we can address it separately?\n\nYes see [2]\n\n[1] https://gerrit-review.googlesource.com/c/plugins/replication/+/49820\n[2] https://crbug.com/gerrit/11025",
      "parentUuid": "0002ec16_1349609a",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 62,
        "endChar": 53
      },
      "revId": "f1b750571ac3da98d6dc5c91747573595e3c341f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ceb5379_3b7a3ca3",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/AutoReloadRunnable.java",
        "patchSetId": 10
      },
      "lineNbr": 62,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-06-14T11:48:02Z",
      "side": 1,
      "message": "\u003e Oh yes this is true but only until you look at the follow-up change which removes\n\u003e that call from the constructor ;-)\n\u003e A part of the confusion is that I obviously looked from the tip of the your change series.\n\nGotcha, I will look at the follow-up change and close the issue on this one.\n\n\u003e In general the issue of replication.config versioning remains... it shouldn\u0027t depend\n\u003e on an implicit assumption or even pure luck that the allDestinations() gets called from\n\u003e the ReplicationFileBasedConfig constructor.\n\u003e \n\u003e \n\u003e \u003e True, that is an existing issue also in the current code:\n\u003e \u003e https://gerrit.googlesource.com/plugins/replication/+/refs/heads/master/src/main/java/com/googlesource/gerrit/plugins/replication/AutoReloadConfigDecorator.java#103\n\u003e \n\u003e This issue actually exists since [1]\n\u003e \n\u003e \u003e Can you raise an issue so that we can address it separately?\n\u003e \n\u003e Yes see [2]\n\u003e \n\u003e [1] https://gerrit-review.googlesource.com/c/plugins/replication/+/49820\n\u003e [2] https://crbug.com/gerrit/11025\n\nCool, will mark then this conversation as resolved and follow-up the issue [2] in a separate change, which is independent of this series and should be merged ASAP as it is a current bug in the version of the code.",
      "parentUuid": "9655f727_d4de5078",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 62,
        "endChar": 53
      },
      "revId": "f1b750571ac3da98d6dc5c91747573595e3c341f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}