{
  "comments": [
    {
      "key": {
        "uuid": "e7b6b9b2_70d432f0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-08-27T03:57:37Z",
      "side": 1,
      "message": "$ bazel test --runs_per_test\u003d10 ...\nINFO: Invocation ID: 06375c34-07a3-4424-bba2-10a8bee41261\nINFO: Build option --runs_per_test has changed, discarding analysis cache.\nINFO: Analyzed target //plugins/replication:replication_tests (0 packages loaded, 5413 targets configured).\nINFO: Found 1 test target...\nTarget //plugins/replication:replication_tests up-to-date:\n  bazel-bin/plugins/replication/replication_tests.jar\n  bazel-bin/plugins/replication/replication_tests\nINFO: Elapsed time: 728.027s, Critical Path: 250.80s\nINFO: 11 processes: 10 darwin-sandbox, 1 worker.\nINFO: Build completed successfully, 12 total actions\n//plugins/replication:replication_tests                                  PASSED in 249.1s\n  Stats over 10 runs: max \u003d 249.1s, min \u003d 234.7s, avg \u003d 243.2s, dev \u003d 5.3s\n\nINFO: Build completed successfully, 12 total actions",
      "revId": "d87975adea0402e3ee337b4899b40733c329a5cd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c515363_24d27d36",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationIT.java",
        "patchSetId": 6
      },
      "lineNbr": 618,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-08-27T04:11:23Z",
      "side": 1,
      "message": "Concatenating is flaky because we look at the filesystem twice. If the task moves in between those checks, it will show up twice. ðŸ˜ž",
      "range": {
        "startLine": 618,
        "startChar": 11,
        "endLine": 618,
        "endChar": 24
      },
      "revId": "d87975adea0402e3ee337b4899b40733c329a5cd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2fc6cf6c_78899ada",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationIT.java",
        "patchSetId": 6
      },
      "lineNbr": 618,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2020-08-27T08:11:57Z",
      "side": 1,
      "message": "What about:\n\n    Stream.concat(tasksStorage.listWaiting().stream(), tasksStorage.listRunning().stream()).distinct();",
      "parentUuid": "9c515363_24d27d36",
      "range": {
        "startLine": 618,
        "startChar": 11,
        "endLine": 618,
        "endChar": 24
      },
      "revId": "d87975adea0402e3ee337b4899b40733c329a5cd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc230c4c_9d1bec08",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationIT.java",
        "patchSetId": 6
      },
      "lineNbr": 618,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-08-27T18:19:39Z",
      "side": 1,
      "message": "That might work for this case (though I would guess distinct() needs equals()?). Unfortunately it\u0027s not a global fit, because it\u0027s perfectly ok to have the \"same\" task in both waiting/ and running/ and distinct() would drop one. I might just fix all the tests, but that\u0027s going to be a lot of work. Let me see if it\u0027s safe to do some kind of distinct() for the callers here. Thanks for that suggestion.",
      "parentUuid": "2fc6cf6c_78899ada",
      "range": {
        "startLine": 618,
        "startChar": 11,
        "endLine": 618,
        "endChar": 24
      },
      "revId": "d87975adea0402e3ee337b4899b40733c329a5cd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a2bbe52_546579da",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationIT.java",
        "patchSetId": 6
      },
      "lineNbr": 618,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2020-08-27T18:43:23Z",
      "side": 1,
      "message": "You could potentially call listWaiting() and listRunning() inside a syncronized(taskStorage) block, and that should prevent the listings from changing since the taskStorage list methods are currently synchronized. While I think we want to eventually remove the need for those synchronized since they are there mainly for the tests, that should not be the in this change. By adding that synchronized you would not be adding any additional constraints that this test doesn\u0027t already rely on.",
      "parentUuid": "fc230c4c_9d1bec08",
      "range": {
        "startLine": 618,
        "startChar": 11,
        "endLine": 618,
        "endChar": 24
      },
      "revId": "d87975adea0402e3ee337b4899b40733c329a5cd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}