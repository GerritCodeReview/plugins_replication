{
  "comments": [
    {
      "key": {
        "uuid": "Q4z8u55Y",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/Destination.java",
        "patchSetId": 5
      },
      "lineNbr": 345,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2013-03-06T04:13:38Z",
      "side": 1,
      "message": "It might be clearer if you returned false here and just checked for the cancel after the failed call to prevent the reschedule.   Then I don\u0027t think you would even have to check for cancelled in the success case anymore simplifying things a bit potentially?",
      "revId": "6c403577a078ac8f1d646760ca1cac0d110d8934",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RDVXzbCw",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/Destination.java",
        "patchSetId": 5
      },
      "lineNbr": 345,
      "author": {
        "id": 1012098
      },
      "writtenOn": "2013-03-06T23:36:54Z",
      "side": 1,
      "message": "Hmm.... your comment has led me to see a bug in my code, and other strangeness...\n\nThe bug is this: if inFlight.containsKey(op.getURI()) is true, then op needs to be removed from pending (it will be re-inserted into pending when it is rescheduled).\n\nThe weirdness is this: A canceled job should never get to this code path.  The only place that PushOne.cancel() is called is in Destination.reschedule(), and that code removes the canceled job from pending immediately after the call to cancel().\n\nSo... I can refactor the existing logic around canceled, if you guys are comfortable with that.  There are no tests for this as of yet, though I\u0027m working on writing one now.",
      "parentUuid": "Q4z8u55Y",
      "revId": "6c403577a078ac8f1d646760ca1cac0d110d8934",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}