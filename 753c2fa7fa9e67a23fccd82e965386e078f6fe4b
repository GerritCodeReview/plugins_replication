{
  "comments": [
    {
      "key": {
        "uuid": "01c33723_1d859861",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-08-14T22:44:18Z",
      "side": 1,
      "message": "Have you explored the option suggested?",
      "revId": "753c2fa7fa9e67a23fccd82e965386e078f6fe4b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34bc912c_78407b7e",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorageTest.java",
        "patchSetId": 3
      },
      "lineNbr": 234,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-08-14T22:44:18Z",
      "side": 1,
      "message": "We have already discuss that option in an earlier review: instead of this change, you could move this equals into the ReplicateRefUpdate class. That would make the entire set of assertions a lot easier to use, because you could use the collections matchers.",
      "range": {
        "startLine": 226,
        "startChar": 0,
        "endLine": 234,
        "endChar": 3
      },
      "revId": "753c2fa7fa9e67a23fccd82e965386e078f6fe4b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83550cdf_7a02077b",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorageTest.java",
        "patchSetId": 3
      },
      "lineNbr": 234,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-08-14T22:52:48Z",
      "side": 1,
      "message": "I\u0027d still prefer to defer that refactoring for a non-stable branch. At that point, we can convert ReplicateRefUpdate to an AutoValue, which solves this whole thing. Part of the goal of building up these tests is to make refactors like that safer.",
      "parentUuid": "34bc912c_78407b7e",
      "range": {
        "startLine": 226,
        "startChar": 0,
        "endLine": 234,
        "endChar": 3
      },
      "revId": "753c2fa7fa9e67a23fccd82e965386e078f6fe4b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1db95edf_af2397b7",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorageTest.java",
        "patchSetId": 3
      },
      "lineNbr": 234,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-08-17T15:56:58Z",
      "side": 1,
      "message": "See the alternative approach with Change-Id: Ib1e68a52.\nstable-3.1 is still a supported branch and adding two methods is not a big refactoring either.\nI agree with you instead for the AutoValue introduction: we can merge this one up to master and then introduce AutoValues all throughout the replication plugin.",
      "parentUuid": "83550cdf_7a02077b",
      "range": {
        "startLine": 226,
        "startChar": 0,
        "endLine": 234,
        "endChar": 3
      },
      "revId": "753c2fa7fa9e67a23fccd82e965386e078f6fe4b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5911b9cf_a89aff7c",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorageTest.java",
        "patchSetId": 3
      },
      "lineNbr": 234,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-08-17T22:29:10Z",
      "side": 1,
      "message": "That seems much more invasive than what\u0027s needed to fix this test. Can this get a +2 now?",
      "parentUuid": "1db95edf_af2397b7",
      "range": {
        "startLine": 226,
        "startChar": 0,
        "endLine": 234,
        "endChar": 3
      },
      "revId": "753c2fa7fa9e67a23fccd82e965386e078f6fe4b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e847c08d_58c760ae",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorageTest.java",
        "patchSetId": 3
      },
      "lineNbr": 234,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-08-17T22:48:53Z",
      "side": 1,
      "message": "\u003e That seems much more invasive than what\u0027s needed to fix this test.\n\nIf you look at the test, it is removing code and not invasive.\nThe rest of the change has been added to satisfy Martin\u0027s requirement to use the hashCode and equals in the code to see its benefits.\n\nIt is basically two changes squashed in one:\n- the move of equals to the ReplicationRefUpdate class\n- the use of the method from the replication plugin code\n\nI could have done it in two steps (as I typically do), however, Martin\u0027s feedback was meaningful and required to have its utilisation also in the same change.\n\nHope that makes sense.",
      "parentUuid": "5911b9cf_a89aff7c",
      "range": {
        "startLine": 226,
        "startChar": 0,
        "endLine": 234,
        "endChar": 3
      },
      "revId": "753c2fa7fa9e67a23fccd82e965386e078f6fe4b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92f23d18_05eb0900",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorageTest.java",
        "patchSetId": 3
      },
      "lineNbr": 234,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-08-17T22:53:56Z",
      "side": 1,
      "message": "\u003e \u003e That seems much more invasive than what\u0027s needed to fix this test.\n\u003e \n\u003e If you look at the test, it is removing code and not invasive.\n\nThe change as a whole is more invasive than necessary on a stable branch. Maintaining a custom equals in the *test* code is a much safer policy for a stable branch. I can upload a change to switch ReplicateRefUpdate to AutoValue on master this week (if not today). This whole conversation becomes moot at that point.",
      "parentUuid": "e847c08d_58c760ae",
      "range": {
        "startLine": 226,
        "startChar": 0,
        "endLine": 234,
        "endChar": 3
      },
      "revId": "753c2fa7fa9e67a23fccd82e965386e078f6fe4b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}