{
  "comments": [
    {
      "key": {
        "uuid": "bc5b693b_22e041a1",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ChainedScheduler.java",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2020-06-23T07:40:24Z",
      "side": 1,
      "message": "This feels as a much too complicated structure.\n\nThe only instantiated ChainedScheduler is a StreamScheduler. Merge ChainedScheduler and StreamScheduler into a scheduler that is aware of the Stream\nThat way you can remove the extra inner StreamScheduler class but also DecoratorRunner.\nI would also skip the generics since this is only used for ReplicateRefUpdate\n\n    public class ChainedEventScheduler {\n      private final ScheduledExecutorService threadPool;\n      private final Stream\u003cReplicateRefUpdate\u003e refUpdates;\n      private final Iterator\u003cReplicateRefUpdate\u003e iterator;\n      private final Runner runner;\n\n      public ChainedScheduler(\n          ScheduledExecutorService threadPool, Stream\u003cReplicateRefUpdate\u003e refUpdates, Runner\u003cT\u003e runner) {\n        this.threadPool \u003d threadPool;\n        this.refUpdate \u003d refUpdates;\n        this.iterator \u003d refUpdates.iterator();\n        this.runner \u003d runner;\n        next();\n      }\n\n      protected void next() {\n        if (!iterator.hasNext()) {\n          runner.onDone();\n          refUpdates.close()\n          return;\n        }\n\n        schedule(new Chainer(iterator.next()));\n      }\n\n      protected void schedule(Runnable r) {\n        threadPool.execute(r);\n      }\n    }",
      "revId": "64353613e1e1365531921920ba6e9f06bc6f184d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "756342d8_ca288243",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ChainedScheduler.java",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2020-06-23T18:06:11Z",
      "side": 1,
      "message": "\u003e The only instantiated ChainedScheduler is a StreamScheduler. Merge ChainedScheduler and StreamScheduler into a scheduler that is aware of the Stream\n\nI made two classes to ensure that each class attempts to follow the \"implement a single concern\" principle. If I merge the two, that will no longer be the case.\n\nAlso, as a general approach I think it is better to write shareable framework code, especially when it is an obvious pattern. I think Saza would agree since he thought that this class was a good enough idea that he wanted me to put into core even. Additionally, reuse isn\u0027t just theoretical, I actually do re-use this class in this change: https://gerrit-review.googlesource.com/c/plugins/replication/+/268612\n\nThat being said, if you disagree, I do understand the value of keeping things simpler and more concrete until there is a shared use. And if it would help, I would be happy to make a reduced version of this class for this change, and to then refactor it to be more reusable for (or after) the other change.",
      "parentUuid": "bc5b693b_22e041a1",
      "revId": "64353613e1e1365531921920ba6e9f06bc6f184d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62b98cde_449cbdc1",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ChainedScheduler.java",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2020-06-24T07:15:07Z",
      "side": 1,
      "message": "I typically favor readability over (possibly sometime in the future leveraged) reusability. In this case, as you pointed out, the reusability is not merely a pattern but is actually leveraged down the line.\nI would prefer if this iteration of ChainedScheduler was only catering to the current need. My reason for this is that having the implementation and use in the same commit helps when trying to decipher the code at a later date.\n\nThat being said it\u0027s still a nit: and not a very strong preference.\nThe CR-1 was for the spelling errors and the redundant ReplicationTasksStorage#list method.",
      "parentUuid": "756342d8_ca288243",
      "revId": "64353613e1e1365531921920ba6e9f06bc6f184d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2dca30c_4df2c042",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ChainedScheduler.java",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-06-24T23:28:36Z",
      "side": 1,
      "message": "Thanks Sven, that makes sense. For now I didn\u0027t make it less generic because when I tried it locally it didn\u0027t seem as clean. If you review the new patchset and think it could benefit from being reduced to this specific need, I can do that.",
      "parentUuid": "62b98cde_449cbdc1",
      "revId": "64353613e1e1365531921920ba6e9f06bc6f184d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fd44058_32da304b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ChainedScheduler.java",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2020-06-23T07:40:24Z",
      "side": 1,
      "message": "executed",
      "range": {
        "startLine": 36,
        "startChar": 17,
        "endLine": 36,
        "endChar": 26
      },
      "revId": "64353613e1e1365531921920ba6e9f06bc6f184d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5b336d0_b461b094",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ChainedScheduler.java",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2020-06-23T07:40:24Z",
      "side": 1,
      "message": "thread pool",
      "range": {
        "startLine": 36,
        "startChar": 34,
        "endLine": 36,
        "endChar": 44
      },
      "revId": "64353613e1e1365531921920ba6e9f06bc6f184d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49220a0e_e4aceb28",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ChainedScheduler.java",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-06-24T23:28:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5fd44058_32da304b",
      "range": {
        "startLine": 36,
        "startChar": 17,
        "endLine": 36,
        "endChar": 26
      },
      "revId": "64353613e1e1365531921920ba6e9f06bc6f184d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4174e227_1a1e1c8c",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ChainedScheduler.java",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-06-24T23:28:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a5b336d0_b461b094",
      "range": {
        "startLine": 36,
        "startChar": 34,
        "endLine": 36,
        "endChar": 44
      },
      "revId": "64353613e1e1365531921920ba6e9f06bc6f184d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00572e6d_a3f39efb",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorage.java",
        "patchSetId": 6
      },
      "lineNbr": 116,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2020-06-23T07:40:24Z",
      "side": 1,
      "message": "This seems to only be called by tests (in one case the test actually turns it back into a stream).\nI would suggest to skip this method and re-write the tests to use stream() instead.",
      "range": {
        "startLine": 114,
        "startChar": 0,
        "endLine": 116,
        "endChar": 3
      },
      "revId": "64353613e1e1365531921920ba6e9f06bc6f184d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f71e1b6_472f4367",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorage.java",
        "patchSetId": 6
      },
      "lineNbr": 116,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-06-24T23:28:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "00572e6d_a3f39efb",
      "range": {
        "startLine": 114,
        "startChar": 0,
        "endLine": 116,
        "endChar": 3
      },
      "revId": "64353613e1e1365531921920ba6e9f06bc6f184d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9676a528_0b5f3bff",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorage.java",
        "patchSetId": 6
      },
      "lineNbr": 127,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2020-06-23T07:40:24Z",
      "side": 1,
      "message": "Since stream(Path) is only used by stream() it feels redundant.\nUse Optional::isPresent \u0026 Optional::get.\nI would suggest to rewrite it as:\n\n    public Stream\u003cReplicateRefUpdate\u003e stream() {\n      return walk(refUpdates())\n          .map(path -\u003e getReplicateRefUpdate(path))\n          .filter(Optional::isPresent)\n          .map(Optional::get);    \n    }\n\nThis would make it easier to read.",
      "range": {
        "startLine": 118,
        "startChar": 2,
        "endLine": 127,
        "endChar": 3
      },
      "revId": "64353613e1e1365531921920ba6e9f06bc6f184d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4bb3aa4_f0163c13",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationTasksStorage.java",
        "patchSetId": 6
      },
      "lineNbr": 127,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-06-24T23:28:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9676a528_0b5f3bff",
      "range": {
        "startLine": 118,
        "startChar": 2,
        "endLine": 127,
        "endChar": 3
      },
      "revId": "64353613e1e1365531921920ba6e9f06bc6f184d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}