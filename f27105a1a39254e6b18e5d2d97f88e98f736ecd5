{
  "comments": [
    {
      "key": {
        "uuid": "06c21224_f5ba2991",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-10-15T13:12:19Z",
      "side": 1,
      "message": "To fail or to be skipped?\n\nMy understanding of the existing code was that ReplicationTasksStorage.delete is called unconditionally from\nthe finally block in the PushOne.runPushOperation (via the Destination.notifyFinished). And this happens also in the case\nof (some) errors.",
      "revId": "f27105a1a39254e6b18e5d2d97f88e98f736ecd5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51281711_79d7a47c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2019-10-15T13:23:35Z",
      "side": 1,
      "message": "Skipped because they would fail (project doesn\u0027t exist)?\n\nYes, they will get cleaned up eventually, but why bother trying to replicate the known failures?",
      "parentUuid": "06c21224_f5ba2991",
      "revId": "f27105a1a39254e6b18e5d2d97f88e98f736ecd5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad7cb244_7b03f53b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-10-15T13:33:16Z",
      "side": 1,
      "message": "IIRC, when I initially implemented the persistence of the replication tasks the idea was to persist them as soon as possible\nin order to minimize the risk of losing them (in the case the plugin gets reloaded or Gerrit restarted). Your arguments for postponing\nthe persistence are in some way justified, but postponing the\npersistence also (slightly) increases the probability of losing replication tasks, those that would actually run.",
      "parentUuid": "51281711_79d7a47c",
      "revId": "f27105a1a39254e6b18e5d2d97f88e98f736ecd5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f567b7f_924201a2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2019-10-15T14:01:10Z",
      "side": 1,
      "message": "I agree with this, I don\u0027t like postponing them either, I could take our leave this change. I was fiddling with the code and wanted to see where I could put this call with the least chance of it being missed, but it does delay things. I personally don\u0027t care about missing it on shutdown because until we persist updates before they are made (pre hook instead of post hook), then there will always be a gap and I don\u0027t plan to rely on this to eliminate \"startup replication\". If we ever did have a pre hook that recorded updates before they happened, then this would likely be the right place to fire that the updates did happen and that replication can now proceed.",
      "parentUuid": "ad7cb244_7b03f53b",
      "revId": "f27105a1a39254e6b18e5d2d97f88e98f736ecd5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84a76f70_d73e3b91",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-10-15T14:47:33Z",
      "side": 1,
      "message": "\u003e I personally don\u0027t care about missing it on shutdown because until we persist updates before they are made (pre hook instead of post hook), then there will always be a gap and I don\u0027t plan to rely on this to eliminate \"startup replication\".\n\nTrue. Without persisting ref-updated events before they are\nactually done we cannot safely eliminate the \"startup replication\".\nGerrit server could be shutdown just after a ref is updated and\nbefore event listeners had chance to process that event. Do you plan\nto work on that topic?",
      "parentUuid": "0f567b7f_924201a2",
      "revId": "f27105a1a39254e6b18e5d2d97f88e98f736ecd5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}