{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "435197ef_d369e3dc",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationEventsIT.java",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-01-13T00:12:54Z",
      "side": 1,
      "message": "Ran out of time today, but these should be fixable by casting the returned events to the type we expect and then asserting the refs match.",
      "range": {
        "startLine": 75,
        "startChar": 21,
        "endLine": 75,
        "endChar": 76
      },
      "revId": "e84e7f7ea38c64751f234844b8096586c555c947",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4cf9e06_92e269d6",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationEventsIT.java",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-01-13T14:36:53Z",
      "side": 1,
      "message": "Sounds good, let me pick up on that.",
      "parentUuid": "435197ef_d369e3dc",
      "range": {
        "startLine": 75,
        "startChar": 21,
        "endLine": 75,
        "endChar": 76
      },
      "revId": "e84e7f7ea38c64751f234844b8096586c555c947",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71f3e5a1_751a3a51",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationEventsIT.java",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-01-13T00:27:30Z",
      "side": 1,
      "message": "I saw this fail once randomly, so it might be flaky. Any ideas on how to robustly guard against that?",
      "revId": "e84e7f7ea38c64751f234844b8096586c555c947",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "babaf8d7_3bfcfb1f",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationEventsIT.java",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-01-13T14:36:53Z",
      "side": 1,
      "message": "I think it\u0027s possible that we are checking the events to be scheduled too early, _before_ they are actually scheduled.",
      "parentUuid": "71f3e5a1_751a3a51",
      "revId": "e84e7f7ea38c64751f234844b8096586c555c947",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7f75063_65a387b7",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationEventsIT.java",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-01-13T15:14:30Z",
      "side": 1,
      "message": "I don\u0027t think we can have that problem for scheduling because it should happen inline with the test. However, replication running and completing would happen in another thread, so we may need a buffer between \"ref is updated\" and \"event is done firing\".",
      "parentUuid": "babaf8d7_3bfcfb1f",
      "revId": "e84e7f7ea38c64751f234844b8096586c555c947",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73c11a68_18bdd7d7",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/ReplicationEventsIT.java",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-01-13T15:44:31Z",
      "side": 1,
      "message": "mmm, I think scheduling it would happen in a different thread, too.\n\nEach ref replication happens on a different thread (if you follow this stack[1]), so the publishing of the scheduled event happens inline with the *scheduled replication task*, not with the test itself.\n\nIn fact, by running [2] I managed to show flakiness caused by asserting before events were scheduled, not on the firing itself.\n\nI have a version of the tests that are not flaky anymore, let me push it and see what you think?\n\n[1]https://gerrit.googlesource.com/plugins/replication/+/refs/heads/master/src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationQueue.java#199\n\n[2] bazelisk test --java_toolchain\u003d//tools:error_prone_warnings_toolchain --test_output\u003derrors --test_summary\u003ddetailed --flaky_test_attempts\u003d3 --runs_per_test\u003d5 //plugins/replication:src_test_java_com_googlesource_gerrit_plugins_replication_ReplicationEventsIT",
      "parentUuid": "f7f75063_65a387b7",
      "revId": "e84e7f7ea38c64751f234844b8096586c555c947",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}