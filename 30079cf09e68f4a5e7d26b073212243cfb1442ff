{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "51a08671_3a53789d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/api/ReplicationRemotesApi.java",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-06-17T10:24:15Z",
      "side": 1,
      "message": "can we drop the `Api` from the class name? IMO it doesn\u0027t add anything, as everything is the \"api\"",
      "range": {
        "startLine": 28,
        "startChar": 35,
        "endLine": 28,
        "endChar": 39
      },
      "revId": "30079cf09e68f4a5e7d26b073212243cfb1442ff",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aff5f751_d4f822fa",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/api/ReplicationRemotesApi.java",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-06-17T11:31:24Z",
      "side": 1,
      "message": "I added the `Api` to be consistent with the other `Api` we have in Gerrit, such as `com.google.gerrit.extensions.api.GerritApi`",
      "parentUuid": "51a08671_3a53789d",
      "range": {
        "startLine": 28,
        "startChar": 35,
        "endLine": 28,
        "endChar": 39
      },
      "revId": "30079cf09e68f4a5e7d26b073212243cfb1442ff",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a775c260_c1804d80",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/api/ReplicationRemotesApi.java",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-06-17T21:47:32Z",
      "side": 1,
      "message": "sure, that\u0027s Gerrit _convetion_, but none of the previous _api_ classes in `replication.api` package has the `Api` suffix. Also if we want to mimic the `GerritApi`, we should have rather `ReplicationApi` class that would then have a getter for `RemotesCaonfig`.",
      "parentUuid": "aff5f751_d4f822fa",
      "range": {
        "startLine": 28,
        "startChar": 35,
        "endLine": 28,
        "endChar": 39
      },
      "revId": "30079cf09e68f4a5e7d26b073212243cfb1442ff",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "612c588e_ffc8cbe0",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/api/ReplicationRemotesApi.java",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-06-17T23:36:44Z",
      "side": 1,
      "message": "\u003e ReplicationApi class that would then have a getter for RemotesCaonfig\n\nThat\u0027s a good idea, actually, and it would allow also to add in the future the other replication APIs to be used by other plugins.\n\nWill do as a separate follow-up change.",
      "parentUuid": "a775c260_c1804d80",
      "range": {
        "startLine": 28,
        "startChar": 35,
        "endLine": 28,
        "endChar": 39
      },
      "revId": "30079cf09e68f4a5e7d26b073212243cfb1442ff",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "30079cf09e68f4a5e7d26b073212243cfb1442ff",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "30079cf09e68f4a5e7d26b073212243cfb1442ff",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "30079cf09e68f4a5e7d26b073212243cfb1442ff",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "30079cf09e68f4a5e7d26b073212243cfb1442ff",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "30079cf09e68f4a5e7d26b073212243cfb1442ff",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}