{
  "comments": [
    {
      "key": {
        "uuid": "e346d6f2_719f68af",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/DestinationConfiguration.java",
        "patchSetId": 47
      },
      "lineNbr": 175,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-09-27T13:31:56Z",
      "side": 1,
      "message": "This move wasn\u0027t mentioned in the commit message: how is it related to the introduction of the config validation interface?",
      "range": {
        "startLine": 159,
        "startChar": 1,
        "endLine": 175,
        "endChar": 3
      },
      "revId": "c7b298b1c1cad8d97bddad589c7804a56b8dcc56",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68c18588_0fa8e5df",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/DestinationConfiguration.java",
        "patchSetId": 47
      },
      "lineNbr": 175,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-09-27T13:47:05Z",
      "side": 1,
      "message": "isSingleProjectMatch() is used during validation (see DestinationsCollection.java L305) and thus needed to exist outside Destination objects, because validation happens _before_ `Destination`s can be created.\n\nFortunately, its implementation did not rely on any `Destination` internals, so it could be moved quite easily to `DestinationConfiguration`.\nI then created a convenient wrapper at Destination level (L610) to keep outside callers unaware of this internal movement.\n\nI don\u0027t think this should be mentioned in the commit message: it is an internal, back-compatible change, that can be understood by looking at the diff.",
      "parentUuid": "e346d6f2_719f68af",
      "range": {
        "startLine": 159,
        "startChar": 1,
        "endLine": 175,
        "endChar": 3
      },
      "revId": "c7b298b1c1cad8d97bddad589c7804a56b8dcc56",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b05b202_1681680b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationModule.java",
        "patchSetId": 47
      },
      "lineNbr": 80,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-09-27T13:31:56Z",
      "side": 1,
      "message": "Do we really need a dynamic item after all? Why not simply binding the implementation (DestinationCollection) to the interface (ReplicationConfigValidator) ?",
      "range": {
        "startLine": 80,
        "startChar": 4,
        "endLine": 80,
        "endChar": 22
      },
      "revId": "c7b298b1c1cad8d97bddad589c7804a56b8dcc56",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "273bc543_6fc7fb7e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationModule.java",
        "patchSetId": 47
      },
      "lineNbr": 80,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-09-27T13:47:05Z",
      "side": 1,
      "message": "I was thinking about the same, but I thought using DynamicItem would give us more flexibility to swap validation with different ones.\nNow that you raised this point too though, I think it makes sense to have a static binding.\n\nWe can move to DynamicItem in the future, should the need arise.\n\nLet me do this.",
      "parentUuid": "5b05b202_1681680b",
      "range": {
        "startLine": 80,
        "startChar": 4,
        "endLine": 80,
        "endChar": 22
      },
      "revId": "c7b298b1c1cad8d97bddad589c7804a56b8dcc56",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}