{
  "comments": [
    {
      "key": {
        "uuid": "7651a13e_b54077a4",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationQueue.java",
        "patchSetId": 1
      },
      "lineNbr": 102,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2020-07-01T14:59:22Z",
      "side": 1,
      "message": "- use a daemon thread to avoid this can prevent application shutdown if still executing\n- add exception handling and log errors\n- name the thread so that it can be identified in a thread dump\n- executing the task in a plain thread isn\u0027t observable via show-queue command",
      "revId": "0d703de003ad51963e30580661f384e049f39670",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10ced808_1fb3e186",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationQueue.java",
        "patchSetId": 1
      },
      "lineNbr": 102,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2020-07-01T15:00:56Z",
      "side": 1,
      "message": "I didn\u0027t spot that you already named the thread ðŸ˜Š",
      "parentUuid": "7651a13e_b54077a4",
      "revId": "0d703de003ad51963e30580661f384e049f39670",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "096721a6_a2592007",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationQueue.java",
        "patchSetId": 1
      },
      "lineNbr": 102,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2020-08-07T14:15:19Z",
      "side": 1,
      "message": "\u003e use a daemon thread to avoid this can prevent application shutdown if still executing\nDone\n\n\u003e add exception handling and log errors\nThe exception handling remains the same as before this change.\n\n\u003e name the thread so that it can be identified in a thread dump\nDone\n\n\u003e executing the task in a plain thread isn\u0027t observable via show-queue command\nTrue, but this is also not a goal of this change. If this is important I could do it in a follow-up change.\nThis would mean that we register a new queue and submit firePendingEvents task into that queue.",
      "parentUuid": "10ced808_1fb3e186",
      "revId": "0d703de003ad51963e30580661f384e049f39670",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0a43178_c473adac",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationQueue.java",
        "patchSetId": 1
      },
      "lineNbr": 102,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-08-10T10:55:47Z",
      "side": 1,
      "message": "\u003e \u003e executing the task in a plain thread isn\u0027t observable via show-queue command\n\u003e True, but this is also not a goal of this change. If this is important I could do it in a follow-up change.\n\u003e This would mean that we register a new queue and submit firePendingEvents task into that queue.\n\nI agree with SaÅ¡a: the focus of this change is making the simplest and safest fix to the problem. Then, on master, Martin\u0027s change it resolving it with a more canonical and comprehensive fashion.\n\nThe thread is spawn with a well-known name and will be visible in JavaMelody anyway. Also, it is supposed to be created only at startup.\n\nIt is then acceptable IMHO.",
      "parentUuid": "096721a6_a2592007",
      "revId": "0d703de003ad51963e30580661f384e049f39670",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39f5eab1_58aa3696",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationQueue.java",
        "patchSetId": 1
      },
      "lineNbr": 102,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-08-12T19:57:24Z",
      "side": 1,
      "message": "@Matthias any additional feedback on this? Can we consider it as resolved?",
      "parentUuid": "b0a43178_c473adac",
      "revId": "0d703de003ad51963e30580661f384e049f39670",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a598bfd8_87bc435d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationQueue.java",
        "patchSetId": 1
      },
      "lineNbr": 102,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2020-08-13T14:53:06Z",
      "side": 1,
      "message": "I agree, this looks ok and we don\u0027t need to jump through hoops to add sophisticated monitoring on a stable branch.\n\nCurrently firePendingEvents only logs URISyntaxException, maybe we should also log potential runtime exceptions otherwise they wouldn\u0027t show up in the logs if run from a separate thread, or do I miss something ?",
      "parentUuid": "39f5eab1_58aa3696",
      "revId": "0d703de003ad51963e30580661f384e049f39670",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "186b38ab_db12dbd9",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationQueue.java",
        "patchSetId": 1
      },
      "lineNbr": 102,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2020-08-13T15:22:16Z",
      "side": 1,
      "message": "I am not sure that RuntimeExceptions thrown from LifecycleManager.start() are\nlogged at all (I mean even before this change).\nLet me log any exception which causes firePendingEvents to exit.",
      "parentUuid": "a598bfd8_87bc435d",
      "revId": "0d703de003ad51963e30580661f384e049f39670",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "433c01ef_8cee7461",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationQueue.java",
        "patchSetId": 1
      },
      "lineNbr": 102,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2020-08-13T15:22:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "186b38ab_db12dbd9",
      "revId": "0d703de003ad51963e30580661f384e049f39670",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ca6da39_9a5222fc",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationQueue.java",
        "patchSetId": 1
      },
      "lineNbr": 102,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2020-08-19T23:37:29Z",
      "side": 1,
      "message": "Ugh, I think this change is going to be very problematic. Now there is no visibility to when this task is done. This thread/task could be running forever and we would not know this. This change is specifically trying address the fact that this can take extremely long periods of time, and now there is no way of knowing how long. I think this needs to be reverted. Mathias\u0027s concern should be addressed.",
      "parentUuid": "433c01ef_8cee7461",
      "revId": "0d703de003ad51963e30580661f384e049f39670",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "58870ac5_ccf5ab50",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationQueue.java",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-01T13:58:22Z",
      "side": 1,
      "message": "Why not putting also this into the async thread block?",
      "range": {
        "startLine": 108,
        "startChar": 6,
        "endLine": 108,
        "endChar": 32
      },
      "revId": "0d703de003ad51963e30580661f384e049f39670",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1704dea6_99ba13ee",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationQueue.java",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-07-01T14:02:12Z",
      "side": 1,
      "message": "You mean in its own thread? Should this be done configurable? Main thread vs. own thread?",
      "parentUuid": "58870ac5_ccf5ab50",
      "range": {
        "startLine": 108,
        "startChar": 6,
        "endLine": 108,
        "endChar": 32
      },
      "revId": "0d703de003ad51963e30580661f384e049f39670",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cec0228_a3610bd4",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/ReplicationQueue.java",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2020-07-01T14:42:16Z",
      "side": 1,
      "message": "\u003e Why not putting also this into the async thread block?\n\nThe original change also only moved firePendingEvents to the background. It did so\nfrom the firePendingEvents method body so maybe this is why you didn\u0027t spot that fireBeforeStartupEvents wasn\u0027t touched?",
      "parentUuid": "1704dea6_99ba13ee",
      "range": {
        "startLine": 108,
        "startChar": 6,
        "endLine": 108,
        "endChar": 32
      },
      "revId": "0d703de003ad51963e30580661f384e049f39670",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}